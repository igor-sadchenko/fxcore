/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Java proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED) || defined(DEBUG_DIRECTOR_EXCEPTION) || defined(DEBUG_DIRECTOR_THREAD_NAME)
#include <iostream>
#endif

#include <exception>

#if defined(SWIG_JAVA_USE_THREAD_NAME)

#if !defined(SWIG_JAVA_GET_THREAD_NAME)
namespace Swig {
  SWIGINTERN int GetThreadName(char *name, size_t len);
}

#if defined(__linux__)

#include <sys/prctl.h>
SWIGINTERN int Swig::GetThreadName(char *name, size_t len) {
  (void)len;
#if defined(PR_GET_NAME)
  return prctl(PR_GET_NAME, (unsigned long)name, 0, 0, 0);
#else
  (void)name;
  return 1;
#endif
}

#elif defined(__unix__) || defined(__APPLE__)

#include <pthread.h>
SWIGINTERN int Swig::GetThreadName(char *name, size_t len) {
  return pthread_getname_np(pthread_self(), name, len);
}

#else

SWIGINTERN int Swig::GetThreadName(char *name, size_t len) {
  (void)len;
  (void)name;
  return 1;
}
#endif

#endif

#endif

namespace Swig {

  /* Java object wrapper */
  class JObjectWrapper {
  public:
    JObjectWrapper() : jthis_(NULL), weak_global_(true) {
    }

    ~JObjectWrapper() {
      jthis_ = NULL;
      weak_global_ = true;
    }

    bool set(JNIEnv *jenv, jobject jobj, bool mem_own, bool weak_global) {
      if (!jthis_) {
        weak_global_ = weak_global || !mem_own; // hold as weak global if explicitly requested or not owned
        if (jobj)
          jthis_ = weak_global_ ? jenv->NewWeakGlobalRef(jobj) : jenv->NewGlobalRef(jobj);
#if defined(DEBUG_DIRECTOR_OWNED)
        std::cout << "JObjectWrapper::set(" << jobj << ", " << (weak_global ? "weak_global" : "global_ref") << ") -> " << jthis_ << std::endl;
#endif
        return true;
      } else {
#if defined(DEBUG_DIRECTOR_OWNED)
        std::cout << "JObjectWrapper::set(" << jobj << ", " << (weak_global ? "weak_global" : "global_ref") << ") -> already set" << std::endl;
#endif
        return false;
      }
    }

    jobject get(JNIEnv *jenv) const {
#if defined(DEBUG_DIRECTOR_OWNED)
      std::cout << "JObjectWrapper::get(";
      if (jthis_)
        std::cout << jthis_;
      else
        std::cout << "null";
      std::cout << ") -> return new local ref" << std::endl;
#endif
      return (jthis_ ? jenv->NewLocalRef(jthis_) : jthis_);
    }

    void release(JNIEnv *jenv) {
#if defined(DEBUG_DIRECTOR_OWNED)
      std::cout << "JObjectWrapper::release(" << jthis_ << "): " << (weak_global_ ? "weak global ref" : "global ref") << std::endl;
#endif
      if (jthis_) {
        if (weak_global_) {
          if (jenv->IsSameObject(jthis_, NULL) == JNI_FALSE)
            jenv->DeleteWeakGlobalRef((jweak)jthis_);
        } else
          jenv->DeleteGlobalRef(jthis_);
      }

      jthis_ = NULL;
      weak_global_ = true;
    }

    /* Only call peek if you know what you are doing wrt to weak/global references */
    jobject peek() {
      return jthis_;
    }

    /* Java proxy releases ownership of C++ object, C++ object is now
       responsible for destruction (creates NewGlobalRef to pin Java proxy) */
    void java_change_ownership(JNIEnv *jenv, jobject jself, bool take_or_release) {
      if (take_or_release) {  /* Java takes ownership of C++ object's lifetime. */
        if (!weak_global_) {
          jenv->DeleteGlobalRef(jthis_);
          jthis_ = jenv->NewWeakGlobalRef(jself);
          weak_global_ = true;
        }
      } else {
	/* Java releases ownership of C++ object's lifetime */
        if (weak_global_) {
          jenv->DeleteWeakGlobalRef((jweak)jthis_);
          jthis_ = jenv->NewGlobalRef(jself);
          weak_global_ = false;
        }
      }
    }

  private:
    /* pointer to Java object */
    jobject jthis_;
    /* Local or global reference flag */
    bool weak_global_;
  };

  /* Local JNI reference deleter */
  class LocalRefGuard {
    JNIEnv *jenv_;
    jobject jobj_;

    // non-copyable
    LocalRefGuard(const LocalRefGuard &);
    LocalRefGuard &operator=(const LocalRefGuard &);
  public:
    LocalRefGuard(JNIEnv *jenv, jobject jobj): jenv_(jenv), jobj_(jobj) {}
    ~LocalRefGuard() {
      if (jobj_)
        jenv_->DeleteLocalRef(jobj_);
    }
  };

  /* director base class */
  class Director {
    /* pointer to Java virtual machine */
    JavaVM *swig_jvm_;

  protected:
#if defined (_MSC_VER) && (_MSC_VER<1300)
    class JNIEnvWrapper;
    friend class JNIEnvWrapper;
#endif
    /* Utility class for managing the JNI environment */
    class JNIEnvWrapper {
      const Director *director_;
      JNIEnv *jenv_;
      int env_status;
    public:
      JNIEnvWrapper(const Director *director) : director_(director), jenv_(0), env_status(0) {
#if defined(__ANDROID__)
        JNIEnv **jenv = &jenv_;
#else
        void **jenv = (void **)&jenv_;
#endif
        env_status = director_->swig_jvm_->GetEnv((void **)&jenv_, JNI_VERSION_1_2);
        JavaVMAttachArgs args;
        args.version = JNI_VERSION_1_2;
        args.group = NULL;
        args.name = NULL;
#if defined(SWIG_JAVA_USE_THREAD_NAME)
        char thread_name[64];  // MAX_TASK_COMM_LEN=16 is hard-coded in the Linux kernel and MacOS has MAXTHREADNAMESIZE=64.
        if (Swig::GetThreadName(thread_name, sizeof(thread_name)) == 0) {
          args.name = thread_name;
#if defined(DEBUG_DIRECTOR_THREAD_NAME)
          std::cout << "JNIEnvWrapper: thread name: " << thread_name << std::endl;
        } else {
          std::cout << "JNIEnvWrapper: Couldn't set Java thread name" << std::endl;
#endif
        }
#endif
#if defined(SWIG_JAVA_ATTACH_CURRENT_THREAD_AS_DAEMON)
        // Attach a daemon thread to the JVM. Useful when the JVM should not wait for
        // the thread to exit upon shutdown. Only for jdk-1.4 and later.
        director_->swig_jvm_->AttachCurrentThreadAsDaemon(jenv, &args);
#else
        director_->swig_jvm_->AttachCurrentThread(jenv, &args);
#endif
      }
      ~JNIEnvWrapper() {
#if !defined(SWIG_JAVA_NO_DETACH_CURRENT_THREAD)
        // Some JVMs, eg jdk-1.4.2 and lower on Solaris have a bug and crash with the DetachCurrentThread call.
        // However, without this call, the JVM hangs on exit when the thread was not created by the JVM and creates a memory leak.
        if (env_status == JNI_EDETACHED)
          director_->swig_jvm_->DetachCurrentThread();
#endif
      }
      JNIEnv *getJNIEnv() const {
        return jenv_;
      }
    };

    /* Java object wrapper */
    JObjectWrapper swig_self_;

    /* Disconnect director from Java object */
    void swig_disconnect_director_self(const char *disconn_method) {
      JNIEnvWrapper jnienv(this) ;
      JNIEnv *jenv = jnienv.getJNIEnv() ;
      jobject jobj = swig_self_.get(jenv);
      LocalRefGuard ref_deleter(jenv, jobj);
#if defined(DEBUG_DIRECTOR_OWNED)
      std::cout << "Swig::Director::disconnect_director_self(" << jobj << ")" << std::endl;
#endif
      if (jobj && jenv->IsSameObject(jobj, NULL) == JNI_FALSE) {
        jmethodID disconn_meth = jenv->GetMethodID(jenv->GetObjectClass(jobj), disconn_method, "()V");
        if (disconn_meth) {
#if defined(DEBUG_DIRECTOR_OWNED)
          std::cout << "Swig::Director::disconnect_director_self upcall to " << disconn_method << std::endl;
#endif
          jenv->CallVoidMethod(jobj, disconn_meth);
        }
      }
    }

  public:
    Director(JNIEnv *jenv) : swig_jvm_((JavaVM *) NULL), swig_self_() {
      /* Acquire the Java VM pointer */
      jenv->GetJavaVM(&swig_jvm_);
    }

    virtual ~Director() {
      JNIEnvWrapper jnienv(this) ;
      JNIEnv *jenv = jnienv.getJNIEnv() ;
      swig_self_.release(jenv);
    }

    bool swig_set_self(JNIEnv *jenv, jobject jself, bool mem_own, bool weak_global) {
      return swig_self_.set(jenv, jself, mem_own, weak_global);
    }

    jobject swig_get_self(JNIEnv *jenv) const {
      return swig_self_.get(jenv);
    }

    // Change C++ object's ownership, relative to Java
    void swig_java_change_ownership(JNIEnv *jenv, jobject jself, bool take_or_release) {
      swig_self_.java_change_ownership(jenv, jself, take_or_release);
    }
  };

  // Zero initialized bool array
  template<size_t N> class BoolArray {
    bool array_[N];
  public:
    BoolArray() {
      memset(array_, 0, sizeof(array_));
    }
    bool& operator[](size_t n) {
      return array_[n];
    }
    bool operator[](size_t n) const {
      return array_[n];
    }
  };

  // Utility classes and functions for exception handling.

  // Simple holder for a Java string during exception handling, providing access to a c-style string
  class JavaString {
  public:
    JavaString(JNIEnv *jenv, jstring jstr) : jenv_(jenv), jstr_(jstr), cstr_(0) {
      if (jenv_ && jstr_)
	cstr_ = (const char *) jenv_->GetStringUTFChars(jstr_, NULL);
    }

    ~JavaString() {
      if (jenv_ && jstr_ && cstr_)
	jenv_->ReleaseStringUTFChars(jstr_, cstr_);
    }

    const char *c_str(const char *null_string = "null JavaString") const {
      return cstr_ ? cstr_ : null_string;
    }

  private:
    // non-copyable
    JavaString(const JavaString &);
    JavaString &operator=(const JavaString &);

    JNIEnv *jenv_;
    jstring jstr_;
    const char *cstr_;
  };

  // Helper class to extract the exception message from a Java throwable
  class JavaExceptionMessage {
  public:
    JavaExceptionMessage(JNIEnv *jenv, jthrowable throwable) : message_(jenv, exceptionMessageFromThrowable(jenv, throwable)) {
    }

    // Return a C string of the exception message in the jthrowable passed in the constructor
    // If no message is available, null_string is return instead
    const char *message(const char *null_string = "Could not get exception message in JavaExceptionMessage") const {
      return message_.c_str(null_string);
    }

  private:
    // non-copyable
    JavaExceptionMessage(const JavaExceptionMessage &);
    JavaExceptionMessage &operator=(const JavaExceptionMessage &);

    // Get exception message by calling Java method Throwable.getMessage()
    static jstring exceptionMessageFromThrowable(JNIEnv *jenv, jthrowable throwable) {
      jstring jmsg = NULL;
      if (jenv && throwable) {
	jenv->ExceptionClear(); // Cannot invoke methods with any pending exceptions
	jclass throwclz = jenv->GetObjectClass(throwable);
	if (throwclz) {
	  // All Throwable classes have a getMessage() method, so call it to extract the exception message
	  jmethodID getMessageMethodID = jenv->GetMethodID(throwclz, "getMessage", "()Ljava/lang/String;");
	  if (getMessageMethodID)
	    jmsg = (jstring)jenv->CallObjectMethod(throwable, getMessageMethodID);
	}
	if (jmsg == NULL && jenv->ExceptionCheck())
	  jenv->ExceptionClear();
      }
      return jmsg;
    }

    JavaString message_;
  };

  // C++ Exception class for handling Java exceptions thrown during a director method Java upcall
  class DirectorException : public std::exception {
  public:

    // Construct exception from a Java throwable
    DirectorException(JNIEnv *jenv, jthrowable throwable) : jenv_(jenv), throwable_(throwable), classname_(0), msg_(0) {

      // Call Java method Object.getClass().getName() to obtain the throwable's class name (delimited by '/')
      if (jenv && throwable) {
	jenv->ExceptionClear(); // Cannot invoke methods with any pending exceptions
	jclass throwclz = jenv->GetObjectClass(throwable);
	if (throwclz) {
	  jclass clzclz = jenv->GetObjectClass(throwclz);
	  if (clzclz) {
	    jmethodID getNameMethodID = jenv->GetMethodID(clzclz, "getName", "()Ljava/lang/String;");
	    if (getNameMethodID) {
	      jstring jstr_classname = (jstring)(jenv->CallObjectMethod(throwclz, getNameMethodID));
              // Copy strings, since there is no guarantee that jenv will be active when handled
              if (jstr_classname) {
                JavaString jsclassname(jenv, jstr_classname);
                const char *classname = jsclassname.c_str(0);
                if (classname)
                  classname_ = copypath(classname);
              }
	    }
	  }
	}
      }

      JavaExceptionMessage exceptionmsg(jenv, throwable);
      msg_ = copystr(exceptionmsg.message(0));
    }

    // More general constructor for handling as a java.lang.RuntimeException
    DirectorException(const char *msg) : jenv_(0), throwable_(0), classname_(0), msg_(msg ? copystr(msg) : 0) {
    }

    ~DirectorException() throw() {
      delete[] classname_;
      delete[] msg_;
    }

    const char *what() const throw() {
      return msg_ ? msg_ : "Unspecified DirectorException message";
    }

    // Reconstruct and raise/throw the Java Exception that caused the DirectorException
    // Note that any error in the JNI exception handling results in a Java RuntimeException
    void throwException(JNIEnv *jenv) const {
      if (jenv) {
        if (jenv == jenv_ && throwable_) {
          // Throw original exception if not already pending
          jthrowable throwable = jenv->ExceptionOccurred();
          if (throwable && jenv->IsSameObject(throwable, throwable_) == JNI_FALSE) {
            jenv->ExceptionClear();
            throwable = 0;
          }
          if (!throwable)
            jenv->Throw(throwable_);
        } else {
          // Try and reconstruct original exception, but original stacktrace is not reconstructed
          jenv->ExceptionClear();

          jmethodID ctorMethodID = 0;
          jclass throwableclass = 0;
          if (classname_) {
            throwableclass = jenv->FindClass(classname_);
            if (throwableclass)
              ctorMethodID = jenv->GetMethodID(throwableclass, "<init>", "(Ljava/lang/String;)V");
          }

          if (ctorMethodID) {
            jenv->ThrowNew(throwableclass, what());
          } else {
            SWIG_JavaThrowException(jenv, SWIG_JavaRuntimeException, what());
          }
        }
      }
    }

    // Deprecated - use throwException
    void raiseJavaException(JNIEnv *jenv) const {
      throwException(jenv);
    }

    // Create and throw the DirectorException
    static void raise(JNIEnv *jenv, jthrowable throwable) {
      throw DirectorException(jenv, throwable);
    }

  private:
    static char *copypath(const char *srcmsg) {
      char *target = copystr(srcmsg);
      for (char *c=target; *c; ++c) {
        if ('.' == *c)
          *c = '/';
      }
      return target;
    }

    static char *copystr(const char *srcmsg) {
      char *target = 0;
      if (srcmsg) {
	size_t msglen = strlen(srcmsg) + 1;
	target = new char[msglen];
	strncpy(target, srcmsg, msglen);
      }
      return target;
    }

    JNIEnv *jenv_;
    jthrowable throwable_;
    const char *classname_;
    const char *msg_;
  };

  // Helper method to determine if a Java throwable matches a particular Java class type
  // Note side effect of clearing any pending exceptions
  SWIGINTERN bool ExceptionMatches(JNIEnv *jenv, jthrowable throwable, const char *classname) {
    bool matches = false;

    if (throwable && jenv && classname) {
      // Exceptions need to be cleared for correct behavior.
      // The caller of ExceptionMatches should restore pending exceptions if desired -
      // the caller already has the throwable.
      jenv->ExceptionClear();

      jclass clz = jenv->FindClass(classname);
      if (clz) {
	jclass classclz = jenv->GetObjectClass(clz);
	jmethodID isInstanceMethodID = jenv->GetMethodID(classclz, "isInstance", "(Ljava/lang/Object;)Z");
	if (isInstanceMethodID) {
	  matches = jenv->CallBooleanMethod(clz, isInstanceMethodID, throwable) != 0;
	}
      }

#if defined(DEBUG_DIRECTOR_EXCEPTION)
      if (jenv->ExceptionCheck()) {
        // Typically occurs when an invalid classname argument is passed resulting in a ClassNotFoundException
        JavaExceptionMessage exc(jenv, jenv->ExceptionOccurred());
        std::cout << "Error: ExceptionMatches: class '" << classname << "' : " << exc.message() << std::endl;
      }
#endif
    }
    return matches;
  }
}

namespace Swig {
  namespace {
    jclass jclass_mtmanapiJNI = NULL;
    jmethodID director_method_ids[1];
  }
}

#include <windows.h>
#include "MT4ManagerAPI.h"


static ConGroup *new_ConGroupArray(int nelements) { 
  return new ConGroup[nelements](); 
}

static void delete_ConGroupArray(ConGroup *ary) { 
  delete [] ary; 
}

static ConGroup ConGroupArray_getitem(ConGroup *ary, int index) {
    return ary[index];
}
static void ConGroupArray_setitem(ConGroup *ary, int index, ConGroup value) {
    ary[index] = value;
}


static ConGroupSec *new_ConGroupSecArray(int nelements) { 
  return new ConGroupSec[nelements](); 
}

static void delete_ConGroupSecArray(ConGroupSec *ary) { 
  delete [] ary; 
}

static ConGroupSec ConGroupSecArray_getitem(ConGroupSec *ary, int index) {
    return ary[index];
}
static void ConGroupSecArray_setitem(ConGroupSec *ary, int index, ConGroupSec value) {
    ary[index] = value;
}


static UserRecord *new_UserRecordArray(int nelements) { 
  return new UserRecord[nelements](); 
}

static void delete_UserRecordArray(UserRecord *ary) { 
  delete [] ary; 
}

static UserRecord UserRecordArray_getitem(UserRecord *ary, int index) {
    return ary[index];
}
static void UserRecordArray_setitem(UserRecord *ary, int index, UserRecord value) {
    ary[index] = value;
}


static TradeRecord *new_TradeRecordArray(int nelements) { 
  return new TradeRecord[nelements](); 
}

static void delete_TradeRecordArray(TradeRecord *ary) { 
  delete [] ary; 
}

static TradeRecord TradeRecordArray_getitem(TradeRecord *ary, int index) {
    return ary[index];
}
static void TradeRecordArray_setitem(TradeRecord *ary, int index, TradeRecord value) {
    ary[index] = value;
}


static ConSymbol *new_ConSymbolArray(int nelements) { 
  return new ConSymbol[nelements](); 
}

static void delete_ConSymbolArray(ConSymbol *ary) { 
  delete [] ary; 
}

static ConSymbol ConSymbolArray_getitem(ConSymbol *ary, int index) {
    return ary[index];
}
static void ConSymbolArray_setitem(ConSymbol *ary, int index, ConSymbol value) {
    ary[index] = value;
}


static SymbolInfo *new_SymbolInfoArray(int nelements) { 
  return new SymbolInfo[nelements](); 
}

static void delete_SymbolInfoArray(SymbolInfo *ary) { 
  delete [] ary; 
}

static SymbolInfo SymbolInfoArray_getitem(SymbolInfo *ary, int index) {
    return ary[index];
}
static void SymbolInfoArray_setitem(SymbolInfo *ary, int index, SymbolInfo value) {
    ary[index] = value;
}


static RateInfo *new_RateInfoArray(int nelements) { 
  return new RateInfo[nelements](); 
}

static void delete_RateInfoArray(RateInfo *ary) { 
  delete [] ary; 
}

static RateInfo RateInfoArray_getitem(RateInfo *ary, int index) {
    return ary[index];
}
static void RateInfoArray_setitem(RateInfo *ary, int index, RateInfo value) {
    ary[index] = value;
}


static TickInfo *new_TickInfoArray(int nelements) { 
  return new TickInfo[nelements](); 
}

static void delete_TickInfoArray(TickInfo *ary) { 
  delete [] ary; 
}

static TickInfo TickInfoArray_getitem(TickInfo *ary, int index) {
    return ary[index];
}
static void TickInfoArray_setitem(TickInfo *ary, int index, TickInfo value) {
    ary[index] = value;
}


static ConSessions *new_ConSessionsArray(int nelements) { 
  return new ConSessions[nelements](); 
}

static void delete_ConSessionsArray(ConSessions *ary) { 
  delete [] ary; 
}

static ConSessions ConSessionsArray_getitem(ConSessions *ary, int index) {
    return ary[index];
}
static void ConSessionsArray_setitem(ConSessions *ary, int index, ConSessions value) {
    ary[index] = value;
}


static ConSession *new_ConSessionArray(int nelements) { 
  return new ConSession[nelements](); 
}

static void delete_ConSessionArray(ConSession *ary) { 
  delete [] ary; 
}

static ConSession ConSessionArray_getitem(ConSession *ary, int index) {
    return ary[index];
}
static void ConSessionArray_setitem(ConSession *ary, int index, ConSession value) {
    ary[index] = value;
}


#define LPCSTR char*



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "mtmanapi_wrap.h"

SwigDirector_PumpReceiver::SwigDirector_PumpReceiver(JNIEnv *jenv) : PumpReceiver(), Swig::Director(jenv) {
}

SwigDirector_PumpReceiver::~SwigDirector_PumpReceiver() {
  swig_disconnect_director_self("swigDirectorDisconnect");
}


void SwigDirector_PumpReceiver::OnPump(int code, int typ, void *data, void *param) {
  JNIEnvWrapper swigjnienv(this) ;
  JNIEnv * jenv = swigjnienv.getJNIEnv() ;
  jobject swigjobj = (jobject) NULL ;
  jint jcode  ;
  jint jtyp  ;
  jlong jdata = 0 ;
  jlong jparam = 0 ;
  
  if (!swig_override[0]) {
    SWIG_JavaThrowException(JNIEnvWrapper(this).getJNIEnv(), SWIG_JavaDirectorPureVirtual, "Attempted to invoke pure virtual method PumpReceiver::OnPump.");
    return;
  }
  swigjobj = swig_get_self(jenv);
  if (swigjobj && jenv->IsSameObject(swigjobj, NULL) == JNI_FALSE) {
    jcode = (jint) code;
    jtyp = (jint) typ;
    *((void **)&jdata) = (void *) data; 
    *((void **)&jparam) = (void *) param; 
    jenv->CallStaticVoidMethod(Swig::jclass_mtmanapiJNI, Swig::director_method_ids[0], swigjobj, jcode, jtyp, jdata, jparam);
    jthrowable swigerror = jenv->ExceptionOccurred();
    if (swigerror) {
      Swig::DirectorException::raise(jenv, swigerror);
    }
    
  } else {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null upcall object in PumpReceiver::OnPump ");
  }
  if (swigjobj) jenv->DeleteLocalRef(swigjobj);
}

void SwigDirector_PumpReceiver::swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global) {
  static struct {
    const char *mname;
    const char *mdesc;
    jmethodID base_methid;
  } methods[] = {
    {
      "OnPump", "(IILcom/fxcms/mt4/api/SWIGTYPE_p_void;Lcom/fxcms/mt4/api/SWIGTYPE_p_void;)V", NULL 
    }
  };
  
  static jclass baseclass = 0 ;
  
  if (swig_set_self(jenv, jself, swig_mem_own, weak_global)) {
    if (!baseclass) {
      baseclass = jenv->FindClass("com/fxcms/mt4/api/PumpReceiver");
      if (!baseclass) return;
      baseclass = (jclass) jenv->NewGlobalRef(baseclass);
    }
    bool derived = (jenv->IsSameObject(baseclass, jcls) ? false : true);
    for (int i = 0; i < 1; ++i) {
      if (!methods[i].base_methid) {
        methods[i].base_methid = jenv->GetMethodID(baseclass, methods[i].mname, methods[i].mdesc);
        if (!methods[i].base_methid) return;
      }
      swig_override[i] = false;
      if (derived) {
        jmethodID methid = jenv->GetMethodID(jcls, methods[i].mname, methods[i].mdesc);
        swig_override[i] = (methid != methods[i].base_methid);
        jenv->ExceptionClear();
      }
    }
  }
}



#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGroupArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  ConGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (ConGroup *)new_ConGroupArray(arg1);
  *(ConGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGroupArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  delete_ConGroupArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  ConGroup result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ConGroupArray_getitem(arg1,arg2);
  *(ConGroup **)&jresult = new ConGroup((const ConGroup &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  ConGroup arg3 ;
  ConGroup *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(ConGroup **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ConGroup");
    return ;
  }
  arg3 = *argp3; 
  ConGroupArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGroupSecArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  ConGroupSec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (ConGroupSec *)new_ConGroupSecArray(arg1);
  *(ConGroupSec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGroupSecArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  delete_ConGroupSecArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSecArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  ConGroupSec result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ConGroupSecArray_getitem(arg1,arg2);
  *(ConGroupSec **)&jresult = new ConGroupSec((const ConGroupSec &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSecArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  ConGroupSec arg3 ;
  ConGroupSec *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(ConGroupSec **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ConGroupSec");
    return ;
  }
  arg3 = *argp3; 
  ConGroupSecArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1UserRecordArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (UserRecord *)new_UserRecordArray(arg1);
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1UserRecordArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  delete_UserRecordArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecordArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  UserRecord result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  result = UserRecordArray_getitem(arg1,arg2);
  *(UserRecord **)&jresult = new UserRecord((const UserRecord &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecordArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  UserRecord arg3 ;
  UserRecord *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(UserRecord **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null UserRecord");
    return ;
  }
  arg3 = *argp3; 
  UserRecordArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TradeRecordArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (TradeRecord *)new_TradeRecordArray(arg1);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TradeRecordArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  delete_TradeRecordArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecordArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  TradeRecord result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  result = TradeRecordArray_getitem(arg1,arg2);
  *(TradeRecord **)&jresult = new TradeRecord((const TradeRecord &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecordArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  TradeRecord arg3 ;
  TradeRecord *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(TradeRecord **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null TradeRecord");
    return ;
  }
  arg3 = *argp3; 
  TradeRecordArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSymbolArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  ConSymbol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (ConSymbol *)new_ConSymbolArray(arg1);
  *(ConSymbol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSymbolArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  delete_ConSymbolArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  ConSymbol result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ConSymbolArray_getitem(arg1,arg2);
  *(ConSymbol **)&jresult = new ConSymbol((const ConSymbol &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  ConSymbol arg3 ;
  ConSymbol *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(ConSymbol **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ConSymbol");
    return ;
  }
  arg3 = *argp3; 
  ConSymbolArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1SymbolInfoArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  SymbolInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (SymbolInfo *)new_SymbolInfoArray(arg1);
  *(SymbolInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1SymbolInfoArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  delete_SymbolInfoArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfoArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  SymbolInfo result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  result = SymbolInfoArray_getitem(arg1,arg2);
  *(SymbolInfo **)&jresult = new SymbolInfo((const SymbolInfo &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfoArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  SymbolInfo arg3 ;
  SymbolInfo *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(SymbolInfo **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null SymbolInfo");
    return ;
  }
  arg3 = *argp3; 
  SymbolInfoArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1RateInfoArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  RateInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (RateInfo *)new_RateInfoArray(arg1);
  *(RateInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1RateInfoArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  delete_RateInfoArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  RateInfo result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  result = RateInfoArray_getitem(arg1,arg2);
  *(RateInfo **)&jresult = new RateInfo((const RateInfo &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  RateInfo arg3 ;
  RateInfo *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(RateInfo **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null RateInfo");
    return ;
  }
  arg3 = *argp3; 
  RateInfoArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TickInfoArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  TickInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (TickInfo *)new_TickInfoArray(arg1);
  *(TickInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TickInfoArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  delete_TickInfoArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfoArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  TickInfo *arg1 = (TickInfo *) 0 ;
  int arg2 ;
  TickInfo result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  result = TickInfoArray_getitem(arg1,arg2);
  *(TickInfo **)&jresult = new TickInfo((const TickInfo &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfoArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  int arg2 ;
  TickInfo arg3 ;
  TickInfo *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(TickInfo **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null TickInfo");
    return ;
  }
  arg3 = *argp3; 
  TickInfoArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSessionsArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  ConSessions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (ConSessions *)new_ConSessionsArray(arg1);
  *(ConSessions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSessionsArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  delete_ConSessionsArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessionsArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  int arg2 ;
  ConSessions result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ConSessionsArray_getitem(arg1,arg2);
  *(ConSessions **)&jresult = new ConSessions((const ConSessions &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessionsArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  int arg2 ;
  ConSessions arg3 ;
  ConSessions *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(ConSessions **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ConSessions");
    return ;
  }
  arg3 = *argp3; 
  ConSessionsArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSessionArray(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  ConSession *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (ConSession *)new_ConSessionArray(arg1);
  *(ConSession **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSessionArray(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ConSession *arg1 = (ConSession *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  delete_ConSessionArray(arg1);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessionArray_1getitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  int arg2 ;
  ConSession result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (int)jarg2; 
  result = ConSessionArray_getitem(arg1,arg2);
  *(ConSession **)&jresult = new ConSession((const ConSession &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessionArray_1setitem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  ConSession *arg1 = (ConSession *) 0 ;
  int arg2 ;
  ConSession arg3 ;
  ConSession *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (int)jarg2; 
  argp3 = *(ConSession **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null ConSession");
    return ;
  }
  arg3 = *argp3; 
  ConSessionArray_setitem(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ManAPIProgramVersion_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(400);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ManAPIProgramBuild_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1090);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1COMMON_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_COMMON;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1ACCESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_ACCESS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1SERVERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_SERVERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1TIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_TIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1HOLIDAYS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_HOLIDAYS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1SYMBOLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_SYMBOLS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1SYMB_1GROUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_SYMB_GROUPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1GROUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_GROUPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1MANAGERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_MANAGERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1DATAFEEDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_DATAFEEDS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1BACKUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_BACKUP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1LIVEUPDATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_LIVEUPDATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1SYNC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_SYNC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1PLUGINS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_PLUGINS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1GATEWAY_1ACCOUNTS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_GATEWAY_ACCOUNTS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1GATEWAY_1MARKUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_GATEWAY_MARKUPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1GATEWAY_1RULES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_GATEWAY_RULES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIG_1END_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CONFIG_END;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1owner_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->owner, (const char *)arg2, 128-1);
      arg1->owner[128-1] = 0;
    } else {
      arg1->owner[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1owner_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->owner);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 32-1);
      arg1->name[32-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1address_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (ULONG)jarg2; 
  if (arg1) (arg1)->address = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1address_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (ULONG) ((arg1)->address);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1port_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->port = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1port_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->port);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timeout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  DWORD arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->timeout = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timeout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  DWORD result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (DWORD) ((arg1)->timeout);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1typeofdemo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->typeofdemo = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1typeofdemo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->typeofdemo);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timeofdemo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timeofdemo = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timeofdemo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->timeofdemo);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1daylightcorrection_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->daylightcorrection = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1daylightcorrection_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->daylightcorrection);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1internal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->internal, (const char *)arg2, 60-1);
      arg1->internal[60-1] = 0;
    } else {
      arg1->internal[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1internal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->internal);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timezone_1real_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timezone_real = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timezone_1real_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->timezone_real);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timezone_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timezone = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timezone_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->timezone);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timesync_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->timesync, (const char *)arg2, 64-1);
      arg1->timesync[64-1] = 0;
    } else {
      arg1->timesync[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1timesync_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->timesync);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1minclient_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->minclient = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1minclient_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->minclient);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1minapi_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->minapi = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1minapi_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->minapi);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1feeder_1timeout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  DWORD arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->feeder_timeout = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1feeder_1timeout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  DWORD result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (DWORD) ((arg1)->feeder_timeout);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1keepemails_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->keepemails = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1keepemails_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->keepemails);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1endhour_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->endhour = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1endhour_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->endhour);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1endminute_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->endminute = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1endminute_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->endminute);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->optimization_time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->optimization_time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1lasttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->optimization_lasttime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1lasttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->optimization_lasttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1counter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->optimization_counter = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1counter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->optimization_counter);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->optimization_unused;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1optimization_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int *)(int *) ((arg1)->optimization_unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1antiflood_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->antiflood = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1antiflood_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->antiflood);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1floodcontrol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->floodcontrol = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1floodcontrol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->floodcontrol);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1liveupdate_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->liveupdate_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1liveupdate_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->liveupdate_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lastorder_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lastorder = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lastorder_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->lastorder);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lastlogin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lastlogin = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lastlogin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->lastlogin);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lostlogin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lostlogin = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1lostlogin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->lostlogin);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1rollovers_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rollovers_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1rollovers_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->rollovers_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1database_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->path_database, (const char *)arg2, 256-1);
      arg1->path_database[256-1] = 0;
    } else {
      arg1->path_database[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1database_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->path_database);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1history_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->path_history, (const char *)arg2, 256-1);
      arg1->path_history[256-1] = 0;
    } else {
      arg1->path_history[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1history_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->path_history);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1log_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->path_log, (const char *)arg2, 256-1);
      arg1->path_log[256-1] = 0;
    } else {
      arg1->path_log[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1path_1log_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->path_log);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1last_1day_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->overnight_last_day = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1last_1day_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->overnight_last_day);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1last_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->overnight_last_time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1last_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->overnight_last_time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1prev_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->overnight_prev_time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overnight_1prev_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->overnight_prev_time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overmonth_1last_1month_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->overmonth_last_month = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1overmonth_1last_1month_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->overmonth_last_month);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1adapters_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->adapters, (const char *)arg2, 256-1);
      arg1->adapters[256-1] = 0;
    } else {
      arg1->adapters[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1adapters_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->adapters);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1bind_1adresses_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = *(ULONG **)&jarg2; 
  {
    size_t ii;
    ULONG *b = (ULONG *) arg1->bind_adresses;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((ULONG *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1bind_1adresses_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (ULONG *)(ULONG *) ((arg1)->bind_adresses);
  *(ULONG **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1server_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->server_version = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1server_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (short) ((arg1)->server_version);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1server_1build_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->server_build = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1server_1build_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (short) ((arg1)->server_build);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1web_1adresses_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = *(ULONG **)&jarg2; 
  {
    size_t ii;
    ULONG *b = (ULONG *) arg1->web_adresses;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((ULONG *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1web_1adresses_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  ULONG *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (ULONG *)(ULONG *) ((arg1)->web_adresses);
  *(ULONG **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1statement_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->statement_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1statement_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->statement_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1monthly_1state_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->monthly_state_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1monthly_1state_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->monthly_state_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1keepticks_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->keepticks = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1keepticks_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->keepticks);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1statement_1weekend_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->statement_weekend = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1statement_1weekend_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->statement_weekend);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1last_1activate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->last_activate = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1last_1activate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->last_activate);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1last_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->stop_last = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1last_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (time_t) ((arg1)->stop_last);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1delay_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stop_delay = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1delay_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->stop_delay);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1reason_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stop_reason = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1stop_1reason_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int) ((arg1)->stop_reason);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1account_1url_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->account_url, (const char *)arg2, 128-1);
      arg1->account_url[128-1] = 0;
    } else {
      arg1->account_url[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1account_1url_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (char *)(char *) ((arg1)->account_url);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConCommon_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConCommon *arg1 = (ConCommon *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConCommon **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConCommon(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConCommon *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConCommon *)new ConCommon();
  *(ConCommon **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConCommon(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConCommon *arg1 = (ConCommon *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConCommon **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEMO_1DISABLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEMO_DISABLED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEMO_1PROLONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEMO_PROLONG;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEMO_1FIXED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEMO_FIXED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ROLLOVER_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ROLLOVER_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ROLLOVER_1REOPEN_1BY_1CLOSE_1PRICE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ROLLOVER_REOPEN_BY_CLOSE_PRICE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ROLLOVER_1REOPEN_1BY_1BID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ROLLOVER_REOPEN_BY_BID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1NO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_NO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1RELEASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_RELEASE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1NO_1SERVER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_NO_SERVER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1BETA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_BETA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STATEMENT_1END_1DAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STATEMENT_END_DAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STATEMENT_1START_1DAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STATEMENT_START_DAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MONTHLY_1STATEMENT_1END_1MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MONTHLY_STATEMENT_END_MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MONTHLY_1STATEMENT_1START_1MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MONTHLY_STATEMENT_START_MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STOP_1REASON_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STOP_REASON_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STOP_1REASON_1RESTART_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STOP_REASON_RESTART;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STOP_1REASON_1SHUTDOWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STOP_REASON_SHUTDOWN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_STOP_1REASON_1LIVEUPDATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)STOP_REASON_LIVEUPDATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1action_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->action = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1action_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConAccess *arg1 = (ConAccess *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  result = (int) ((arg1)->action);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConAccess *arg1 = (ConAccess *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  result = (unsigned long) ((arg1)->from);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConAccess *arg1 = (ConAccess *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  result = (unsigned long) ((arg1)->to);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1comment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->comment, (const char *)arg2, 64-1);
      arg1->comment[64-1] = 0;
    } else {
      arg1->comment[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1comment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConAccess *arg1 = (ConAccess *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  result = (char *)(char *) ((arg1)->comment);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)17; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConAccess_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConAccess *arg1 = (ConAccess *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConAccess **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConAccess(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConAccess *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConAccess *)new ConAccess();
  *(ConAccess **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConAccess(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConAccess *arg1 = (ConAccess *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConAccess **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FW_1BLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FW_BLOCK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FW_1PERMIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FW_PERMIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->server, (const char *)arg2, 64-1);
      arg1->server[64-1] = 0;
    } else {
      arg1->server[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (char *)(char *) ((arg1)->server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1ip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ULONG arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = (ULONG)jarg2; 
  if (arg1) (arg1)->ip = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1ip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ULONG result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (ULONG) ((arg1)->ip);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->description, (const char *)arg2, 64-1);
      arg1->description[64-1] = 0;
    } else {
      arg1->description[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (char *)(char *) ((arg1)->description);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1isproxy_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->isproxy = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1isproxy_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (int) ((arg1)->isproxy);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1priority_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->priority = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1priority_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (int) ((arg1)->priority);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1loading_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->loading = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1loading_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (UINT) ((arg1)->loading);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1ip_1internal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ULONG arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = (ULONG)jarg2; 
  if (arg1) (arg1)->ip_internal = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1ip_1internal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ULONG result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (ULONG) ((arg1)->ip_internal);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ConDataServer *arg2 = (ConDataServer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConDataServer **)&jarg1; 
  arg2 = *(ConDataServer **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConDataServer_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  ConDataServer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConDataServer **)&jarg1; 
  result = (ConDataServer *) ((arg1)->next);
  *(ConDataServer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConDataServer(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConDataServer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConDataServer *)new ConDataServer();
  *(ConDataServer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConDataServer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConDataServer *arg1 = (ConDataServer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConDataServer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1days_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConTime *arg1 = (ConTime *) 0 ;
  int (*arg2)[24] ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  arg2 = *(int (**)[24])&jarg2; 
  {
    int (*inp)[24] = (int (*)[24])(arg2);
    int (*dest)[24] = (int (*)[24])(arg1->days);
    size_t ii = 0;
    for (; ii < 7; ++ii) {
      int *ip = inp[ii];
      int *dp = dest[ii];
      size_t jj = 0;
      for (; jj < 24; ++jj) dp[jj] = ip[jj];
    }
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1days_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConTime *arg1 = (ConTime *) 0 ;
  int (*result)[24] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  result = (int (*)[24])(int (*)[24]) ((arg1)->days);
  *(int (**)[24])&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1dayscontrol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConTime *arg1 = (ConTime *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->dayscontrol = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1dayscontrol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConTime *arg1 = (ConTime *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  result = (int) ((arg1)->dayscontrol);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConTime *arg1 = (ConTime *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConTime_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConTime *arg1 = (ConTime *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConTime **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConTime(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConTime *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConTime *)new ConTime();
  *(ConTime **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConTime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConTime *arg1 = (ConTime *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConTime **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1path_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->fullbackup_path, (const char *)arg2, 256-1);
      arg1->fullbackup_path[256-1] = 0;
    } else {
      arg1->fullbackup_path[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1path_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->fullbackup_path);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->fullbackup_period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->fullbackup_period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1store_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->fullbackup_store = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1store_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->fullbackup_store);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1lasttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->fullbackup_lasttime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1lasttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (time_t) ((arg1)->fullbackup_lasttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1shift_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->fullbackup_shift = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1fullbackup_1shift_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (short) ((arg1)->fullbackup_shift);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1external_1path_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->external_path, (const char *)arg2, 256-1);
      arg1->external_path[256-1] = 0;
    } else {
      arg1->external_path[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1external_1path_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->external_path);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->archive_period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->archive_period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1store_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->archive_store = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1store_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->archive_store);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1lasttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->archive_lasttime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1lasttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (time_t) ((arg1)->archive_lasttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1securities_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->export_securities, (const char *)arg2, 512-1);
      arg1->export_securities[512-1] = 0;
    } else {
      arg1->export_securities[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1securities_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->export_securities);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1path_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->export_path, (const char *)arg2, 256-1);
      arg1->export_path[256-1] = 0;
    } else {
      arg1->export_path[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1path_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->export_path);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->export_period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->export_period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1lasttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->export_lasttime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1export_1lasttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (time_t) ((arg1)->export_lasttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1role_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->watch_role = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1role_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->watch_role);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->watch_password, (const char *)arg2, 16-1);
      arg1->watch_password[16-1] = 0;
    } else {
      arg1->watch_password[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->watch_password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1opposite_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->watch_opposite, (const char *)arg2, 24-1);
      arg1->watch_opposite[24-1] = 0;
    } else {
      arg1->watch_opposite[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1opposite_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char *)(char *) ((arg1)->watch_opposite);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1ip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->watch_ip = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1ip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->watch_ip);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1shift_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->archive_shift = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1archive_1shift_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char) ((arg1)->archive_shift);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->watch_state = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char) ((arg1)->watch_state);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1failover_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->watch_failover = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1failover_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (char) ((arg1)->watch_failover);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1timeout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->watch_timeout = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1timeout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (unsigned char) ((arg1)->watch_timeout);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->watch_login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (int) ((arg1)->watch_login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1timestamp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->watch_timestamp = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConBackup_1watch_1timestamp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConBackup *arg1 = (ConBackup *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConBackup **)&jarg1; 
  result = (time_t) ((arg1)->watch_timestamp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConBackup(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConBackup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConBackup *)new ConBackup();
  *(ConBackup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConBackup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConBackup *arg1 = (ConBackup *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConBackup **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WATCH_1STAND_1ALONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WATCH_STAND_ALONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WATCH_1MASTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WATCH_MASTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WATCH_1SLAVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WATCH_SLAVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUP_11HOUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUP_1HOUR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUP_14HOURS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUP_4HOURS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUP_11DAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUP_1DAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BU_1STORE_11MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BU_STORE_1MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BU_1STORE_13MONTHS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BU_STORE_3MONTHS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BU_1STORE_16MONTHS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BU_STORE_6MONTHS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BU_1STORE_11YEAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BU_STORE_1YEAR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1BACKUP_1DISABLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_BACKUP_DISABLED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1BACKUP_15MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_BACKUP_5MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1BACKUP_115MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_BACKUP_15MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1BACKUP_130MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_BACKUP_30MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1BACKUP_11HOUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_BACKUP_1HOUR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_11DAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_1DAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_13DAYS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_3DAYS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_11WEEK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_1WEEK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_12WEEKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_2WEEKS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_11MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_1MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_13MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_3MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ARC_1STORE_16MONTH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ARC_STORE_6MONTH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXPORT_11MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXPORT_1MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXPORT_15MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXPORT_5MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXPORT_115MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXPORT_15MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXPORT_130MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXPORT_30MIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXPORT_11HOUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXPORT_1HOUR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WS_1DISCONNECTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WS_DISCONNECTED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WS_1SYNCHRONIZING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WS_SYNCHRONIZING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_WS_1SYNCHRONIZED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)WS_SYNCHRONIZED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FAILOVER_1OFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FAILOVER_OFF;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FAILOVER_1MOST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FAILOVER_MOST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FAILOVER_1FULL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FAILOVER_FULL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 64-1);
      arg1->name[64-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->file, (const char *)arg2, 256-1);
      arg1->file[256-1] = 0;
    } else {
      arg1->file[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->server, (const char *)arg2, 64-1);
      arg1->server[64-1] = 0;
    } else {
      arg1->server[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->login, (const char *)arg2, 32-1);
      arg1->login[32-1] = 0;
    } else {
      arg1->login[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->login);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1pass_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->pass, (const char *)arg2, 32-1);
      arg1->pass[32-1] = 0;
    } else {
      arg1->pass[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1pass_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->pass);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1keywords_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->keywords, (const char *)arg2, 256-1);
      arg1->keywords[256-1] = 0;
    } else {
      arg1->keywords[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1keywords_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (char *)(char *) ((arg1)->keywords);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timeout = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->timeout);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1reconnect_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timeout_reconnect = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1reconnect_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->timeout_reconnect);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1sleep_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timeout_sleep = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1timeout_1sleep_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->timeout_sleep);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1attemps_1sleep_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->attemps_sleep = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1attemps_1sleep_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->attemps_sleep);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1news_1langid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->news_langid = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1news_1langid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int) ((arg1)->news_langid);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->unused;
    for (ii = 0; ii < (size_t)33; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConFeeder_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConFeeder **)&jarg1; 
  result = (int *)(int *) ((arg1)->unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConFeeder(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConFeeder *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConFeeder *)new ConFeeder();
  *(ConFeeder **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConFeeder(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConFeeder *arg1 = (ConFeeder *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConFeeder **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FEED_1QUOTES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FEED_QUOTES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FEED_1NEWS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FEED_NEWS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FEED_1QUOTESNEWS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)FEED_QUOTESNEWS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MAX_1SEC_1GROUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((32));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MAX_1SEC_1GROPS_1MARGIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((128));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1show_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->show = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1show_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->show);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1trade_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->trade = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1trade_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->trade);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1execution_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->execution = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1execution_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->execution);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->comm_base = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (double) ((arg1)->comm_base);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->comm_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->comm_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->comm_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->comm_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->comm_agent = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (double) ((arg1)->comm_agent);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->comm_agent_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->comm_agent_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1spread_1diff_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread_diff = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1spread_1diff_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->spread_diff);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1min_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lot_min = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1min_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->lot_min);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1max_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lot_max = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1max_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->lot_max);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1step_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->lot_step = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1lot_1step_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->lot_step);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1ie_1deviation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ie_deviation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1ie_1deviation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->ie_deviation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1confirmation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->confirmation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1confirmation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->confirmation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1trade_1rights_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->trade_rights = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1trade_1rights_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->trade_rights);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1ie_1quick_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ie_quick_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1ie_1quick_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->ie_quick_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1autocloseout_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->autocloseout_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1autocloseout_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->autocloseout_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1tax_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->comm_tax = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1tax_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (double) ((arg1)->comm_tax);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->comm_agent_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1comm_1agent_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->comm_agent_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1freemargin_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->freemargin_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1freemargin_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int) ((arg1)->freemargin_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupSec_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupSec **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGroupSec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGroupSec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGroupSec *)new ConGroupSec();
  *(ConGroupSec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGroupSec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGroupSec *arg1 = (ConGroupSec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGroupSec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1swap_1long_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->swap_long = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1swap_1long_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  result = (double) ((arg1)->swap_long);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1swap_1short_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->swap_short = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1swap_1short_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  result = (double) ((arg1)->swap_short);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1margin_1divider_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_divider = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1margin_1divider_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  result = (double) ((arg1)->margin_divider);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)7; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroupMargin_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroupMargin **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGroupMargin(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGroupMargin *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGroupMargin *)new ConGroupMargin();
  *(ConGroupMargin **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGroupMargin(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGroupMargin *arg1 = (ConGroupMargin *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGroupMargin **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXECUTION_1MANUAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXECUTION_MANUAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXECUTION_1AUTO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXECUTION_AUTO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXECUTION_1ACTIVITY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXECUTION_ACTIVITY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_COMM_1TYPE_1MONEY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)COMM_TYPE_MONEY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_COMM_1TYPE_1PIPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)COMM_TYPE_PIPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_COMM_1TYPE_1PERCENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)COMM_TYPE_PERCENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_COMMISSION_1PER_1LOT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)COMMISSION_PER_LOT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_COMMISSION_1PER_1DEAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)COMMISSION_PER_DEAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1DENY_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_DENY_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1DENY_1CLOSEBY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_DENY_CLOSEBY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1DENY_1MUCLOSEBY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_DENY_MUCLOSEBY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1HIHI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_HIHI;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1LOLO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_LOLO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1HILO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_HILO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1LOHI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_LOHI;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1FIFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_FIFO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1LIFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_LIFO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLOSE_1OUT_1INTRDAY_1FIFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLOSE_OUT_INTRDAY_FIFO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1timeout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timeout = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1timeout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->timeout);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1otp_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->otp_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1otp_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->otp_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1company_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->company, (const char *)arg2, 128-1);
      arg1->company[128-1] = 0;
    } else {
      arg1->company[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1company_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->company);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1signature_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->signature, (const char *)arg2, 128-1);
      arg1->signature[128-1] = 0;
    } else {
      arg1->signature[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1signature_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->signature);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1support_1page_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->support_page, (const char *)arg2, 128-1);
      arg1->support_page[128-1] = 0;
    } else {
      arg1->support_page[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1support_1page_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->support_page);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->smtp_server, (const char *)arg2, 64-1);
      arg1->smtp_server[64-1] = 0;
    } else {
      arg1->smtp_server[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->smtp_server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->smtp_login, (const char *)arg2, 32-1);
      arg1->smtp_login[32-1] = 0;
    } else {
      arg1->smtp_login[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->smtp_login);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->smtp_password, (const char *)arg2, 32-1);
      arg1->smtp_password[32-1] = 0;
    } else {
      arg1->smtp_password[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1smtp_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->smtp_password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1support_1email_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->support_email, (const char *)arg2, 64-1);
      arg1->support_email[64-1] = 0;
    } else {
      arg1->support_email[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1support_1email_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->support_email);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1templates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->templates, (const char *)arg2, 32-1);
      arg1->templates[32-1] = 0;
    } else {
      arg1->templates[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1templates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->templates);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1copies_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->copies = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1copies_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->copies);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1reports_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->reports = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1reports_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->reports);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1default_1leverage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->default_leverage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1default_1leverage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->default_leverage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1default_1deposit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->default_deposit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1default_1deposit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (double) ((arg1)->default_deposit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1maxsecurities_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxsecurities = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1maxsecurities_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->maxsecurities);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secgroups_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  ConGroupSec *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = *(ConGroupSec **)&jarg2; 
  {
    size_t ii;
    ConGroupSec *b = (ConGroupSec *) arg1->secgroups;
    for (ii = 0; ii < (size_t)(32); ii++) b[ii] = *((ConGroupSec *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secgroups_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  ConGroupSec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (ConGroupSec *)(ConGroupSec *) ((arg1)->secgroups);
  *(ConGroupSec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secmargins_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  ConGroupMargin *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = *(ConGroupMargin **)&jarg2; 
  {
    size_t ii;
    ConGroupMargin *b = (ConGroupMargin *) arg1->secmargins;
    for (ii = 0; ii < (size_t)(128); ii++) b[ii] = *((ConGroupMargin *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secmargins_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  ConGroupMargin *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (ConGroupMargin *)(ConGroupMargin *) ((arg1)->secmargins);
  *(ConGroupMargin **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secmargins_1total_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->secmargins_total = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1secmargins_1total_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->secmargins_total);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1currency_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->currency, (const char *)arg2, 12-1);
      arg1->currency[12-1] = 0;
    } else {
      arg1->currency[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1currency_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->currency);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1credit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->credit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1credit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (double) ((arg1)->credit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1call_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_call = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1call_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->margin_call);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->margin_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1stopout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_stopout = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1stopout_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->margin_stopout);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1interestrate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->interestrate = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1interestrate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (double) ((arg1)->interestrate);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1use_1swap_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->use_swap = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1use_1swap_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->use_swap);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->news = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->news);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1rights_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rights = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1rights_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->rights);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1check_1ie_1prices_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->check_ie_prices = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1check_1ie_1prices_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->check_ie_prices);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1maxpositions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxpositions = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1maxpositions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->maxpositions);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1close_1reopen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->close_reopen = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1close_1reopen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->close_reopen);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1hedge_1prohibited_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->hedge_prohibited = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1hedge_1prohibited_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->hedge_prohibited);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1close_1fifo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->close_fifo = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1close_1fifo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->close_fifo);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1hedge_1largeleg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->hedge_largeleg = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1hedge_1largeleg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->hedge_largeleg);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1unused_1rights_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->unused_rights;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1unused_1rights_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int *)(int *) ((arg1)->unused_rights);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1securities_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->securities_hash, (const char *)arg2, 16-1);
      arg1->securities_hash[16-1] = 0;
    } else {
      arg1->securities_hash[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1securities_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->securities_hash);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1margin_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->margin_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->archive_period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->archive_period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1max_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->archive_max_balance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1max_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->archive_max_balance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1stopout_1skip_1hedged_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stopout_skip_hedged = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1stopout_1skip_1hedged_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->stopout_skip_hedged);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1pending_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->archive_pending_period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1archive_1pending_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int) ((arg1)->archive_pending_period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1languages_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  UINT *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = *(UINT **)&jarg2; 
  {
    size_t ii;
    UINT *b = (UINT *) arg1->news_languages;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((UINT *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1languages_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  UINT *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (UINT *)(UINT *) ((arg1)->news_languages);
  *(UINT **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1languages_1total_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->news_languages_total = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1news_1languages_1total_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (UINT) ((arg1)->news_languages_total);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)17; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGroup_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGroup *arg1 = (ConGroup *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGroup **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGroup(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGroup *)new ConGroup();
  *(ConGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGroup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGroup *arg1 = (ConGroup *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGroup **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1MODE_1DONT_1USE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_MODE_DONT_USE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1MODE_1USE_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_MODE_USE_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1MODE_1USE_1PROFIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_MODE_USE_PROFIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1MODE_1USE_1LOSS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_MODE_USE_LOSS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1TYPE_1PERCENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_TYPE_PERCENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1TYPE_1CURRENCY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_TYPE_CURRENCY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NEWS_1NO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)NEWS_NO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NEWS_1TOPICS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)NEWS_TOPICS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NEWS_1FULL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)NEWS_FULL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1EMAIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_EMAIL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1TRAILING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_TRAILING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1ADVISOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_ADVISOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1EXPIRATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_EXPIRATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1SIGNALS_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_SIGNALS_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1SIGNALS_1OWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_SIGNALS_OWN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1RISK_1WARNING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_RISK_WARNING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ALLOW_1FLAG_1FORCED_1OTP_1USAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ALLOW_FLAG_FORCED_OTP_USAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OTP_1MODE_1DISABLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OTP_MODE_DISABLED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OTP_1MODE_1TOTP_1SHA256_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OTP_MODE_TOTP_SHA256;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1year_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->year = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1year_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->year);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1month_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->month = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1month_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->month);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1day_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->day = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1day_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->day);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->from);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 32-1);
      arg1->symbol[32-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->description, (const char *)arg2, 128-1);
      arg1->description[128-1] = 0;
    } else {
      arg1->description[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (char *)(char *) ((arg1)->description);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)13; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  ConHoliday *arg2 = (ConHoliday *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConHoliday **)&jarg1; 
  arg2 = *(ConHoliday **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConHoliday_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  ConHoliday *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConHoliday **)&jarg1; 
  result = (ConHoliday *) ((arg1)->next);
  *(ConHoliday **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConHoliday(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConHoliday *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConHoliday *)new ConHoliday();
  *(ConHoliday **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConHoliday(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConHoliday *arg1 = (ConHoliday *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConHoliday **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1FILES_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((128));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->file, (const char *)arg2, 256-1);
      arg1->file[256-1] = 0;
    } else {
      arg1->file[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  result = (char *)(char *) ((arg1)->file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  result = (int) ((arg1)->size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->hash, (const char *)arg2, 36-1);
      arg1->hash[36-1] = 0;
    } else {
      arg1->hash[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  result = (char *)(char *) ((arg1)->hash);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)10; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LiveInfoFile_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(LiveInfoFile **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1LiveInfoFile(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  LiveInfoFile *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (LiveInfoFile *)new LiveInfoFile();
  *(LiveInfoFile **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1LiveInfoFile(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  LiveInfoFile *arg1 = (LiveInfoFile *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(LiveInfoFile **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1company_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->company, (const char *)arg2, 128-1);
      arg1->company[128-1] = 0;
    } else {
      arg1->company[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1company_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (char *)(char *) ((arg1)->company);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1path_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->path, (const char *)arg2, 256-1);
      arg1->path[256-1] = 0;
    } else {
      arg1->path[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1path_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (char *)(char *) ((arg1)->path);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->version = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->version);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1build_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->build = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1build_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->build);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1maxconnect_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maxconnect = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1maxconnect_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->maxconnect);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1connections_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->connections = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1connections_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->connections);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1totalfiles_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->totalfiles = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1totalfiles_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int) ((arg1)->totalfiles);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1files_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  LiveInfoFile *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = *(LiveInfoFile **)&jarg2; 
  {
    size_t ii;
    LiveInfoFile *b = (LiveInfoFile *) arg1->files;
    for (ii = 0; ii < (size_t)(128); ii++) b[ii] = *((LiveInfoFile *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1files_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  LiveInfoFile *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (LiveInfoFile *)(LiveInfoFile *) ((arg1)->files);
  *(LiveInfoFile **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  ConLiveUpdate *arg2 = (ConLiveUpdate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  arg2 = *(ConLiveUpdate **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConLiveUpdate_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  ConLiveUpdate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  result = (ConLiveUpdate *) ((arg1)->next);
  *(ConLiveUpdate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConLiveUpdate(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConLiveUpdate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConLiveUpdate *)new ConLiveUpdate();
  *(ConLiveUpdate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConLiveUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConLiveUpdate *arg1 = (ConLiveUpdate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConLiveUpdate **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1CLIENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_CLIENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1MANAGER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_MANAGER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1ADMIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_ADMIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1DATACENTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_DATACENTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1CLIENT_1PPC2002_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_CLIENT_PPC2002;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1CLIENT_1PPC2003_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_CLIENT_PPC2003;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1MULTI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_MULTI;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1WD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_WD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1CLIENT_1PHONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_CLIENT_PHONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LIVE_1UPDATE_1LAST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)LIVE_UPDATE_LAST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1internal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->internal = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1internal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  result = (int) ((arg1)->internal);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1minimum_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->minimum_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1minimum_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  result = (int) ((arg1)->minimum_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1maximum_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->maximum_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1maximum_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  result = (int) ((arg1)->maximum_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->unused;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManagerSec_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManagerSec **)&jarg1; 
  result = (int *)(int *) ((arg1)->unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConManagerSec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConManagerSec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConManagerSec *)new ConManagerSec();
  *(ConManagerSec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConManagerSec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConManagerSec *arg1 = (ConManagerSec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConManagerSec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1manager_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->manager = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1manager_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->manager);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1money_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->money = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1money_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->money);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1online_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->online = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1online_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->online);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1riskman_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->riskman = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1riskman_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->riskman);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1broker_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->broker = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1broker_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->broker);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1admin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->admin = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1admin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->admin);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1logs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->logs = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1logs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->logs);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1reports_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->reports = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1reports_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->reports);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1trades_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->trades = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1trades_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->trades);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1market_1watch_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->market_watch = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1market_1watch_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->market_watch);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1email_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->email = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1email_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->email);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1user_1details_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->user_details = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1user_1details_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->user_details);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1see_1trades_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->see_trades = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1see_1trades_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->see_trades);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1news_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->news = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1news_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->news);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1plugins_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->plugins = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1plugins_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->plugins);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1server_1reports_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->server_reports = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1server_1reports_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->server_reports);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1techsupport_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->techsupport = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1techsupport_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->techsupport);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1market_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->market = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1market_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->market);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1notifications_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->notifications = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1notifications_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->notifications);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->unused;
    for (ii = 0; ii < (size_t)9; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int *)(int *) ((arg1)->unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ipfilter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ipfilter = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ipfilter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->ipfilter);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ip_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->ip_from = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ip_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (unsigned long) ((arg1)->ip_from);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ip_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->ip_to = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1ip_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (unsigned long) ((arg1)->ip_to);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1mailbox_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->mailbox, (const char *)arg2, 64-1);
      arg1->mailbox[64-1] = 0;
    } else {
      arg1->mailbox[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1mailbox_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (char *)(char *) ((arg1)->mailbox);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1groups_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->groups, (const char *)arg2, 1024-1);
      arg1->groups[1024-1] = 0;
    } else {
      arg1->groups[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1groups_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (char *)(char *) ((arg1)->groups);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1secgroups_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConManager *arg1 = (ConManager *) 0 ;
  ConManagerSec *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = *(ConManagerSec **)&jarg2; 
  {
    size_t ii;
    ConManagerSec *b = (ConManagerSec *) arg1->secgroups;
    for (ii = 0; ii < (size_t)(32); ii++) b[ii] = *((ConManagerSec *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1secgroups_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  ConManagerSec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (ConManagerSec *)(ConManagerSec *) ((arg1)->secgroups);
  *(ConManagerSec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1exp_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  DWORD arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->exp_time = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1exp_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  DWORD result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (DWORD) ((arg1)->exp_time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 32-1);
      arg1->name[32-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1info_1depth_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->info_depth = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1info_1depth_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int) ((arg1)->info_depth);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConManager *arg1 = (ConManager *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)22; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConManager_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConManager *arg1 = (ConManager *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConManager **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConManager(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConManager *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConManager *)new ConManager();
  *(ConManager **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConManager(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConManager *arg1 = (ConManager *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConManager **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1hour_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->open_hour = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1hour_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (short) ((arg1)->open_hour);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1min_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->open_min = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1min_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (short) ((arg1)->open_min);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1hour_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->close_hour = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1hour_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (short) ((arg1)->close_hour);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1min_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->close_min = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1min_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (short) ((arg1)->close_min);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->open = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1open_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (int) ((arg1)->open);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->close = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1close_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (int) ((arg1)->close);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSession *arg1 = (ConSession *) 0 ;
  short *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  arg2 = *(short **)&jarg2; 
  {
    size_t ii;
    short *b = (short *) arg1->align;
    for (ii = 0; ii < (size_t)7; ii++) b[ii] = *((short *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSession_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSession *arg1 = (ConSession *) 0 ;
  short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSession **)&jarg1; 
  result = (short *)(short *) ((arg1)->align);
  *(short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSession(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConSession *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConSession *)new ConSession();
  *(ConSession **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSession(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConSession *arg1 = (ConSession *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConSession **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1quote_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  ConSession *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = *(ConSession **)&jarg2; 
  {
    size_t ii;
    ConSession *b = (ConSession *) arg1->quote;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((ConSession *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1quote_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  ConSession *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  result = (ConSession *)(ConSession *) ((arg1)->quote);
  *(ConSession **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1trade_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  ConSession *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = *(ConSession **)&jarg2; 
  {
    size_t ii;
    ConSession *b = (ConSession *) arg1->trade;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((ConSession *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1trade_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  ConSession *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  result = (ConSession *)(ConSession *) ((arg1)->trade);
  *(ConSession **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1quote_1overnight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->quote_overnight = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1quote_1overnight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  result = (int) ((arg1)->quote_overnight);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1trade_1overnight_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->trade_overnight = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1trade_1overnight_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  result = (int) ((arg1)->trade_overnight);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSessions_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSessions *arg1 = (ConSessions *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSessions **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSessions(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConSessions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConSessions *)new ConSessions();
  *(ConSessions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSessions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConSessions *arg1 = (ConSessions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConSessions **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MAX_1SYMBOLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1024);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->description, (const char *)arg2, 64-1);
      arg1->description[64-1] = 0;
    } else {
      arg1->description[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (char *)(char *) ((arg1)->description);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1source_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->source, (const char *)arg2, 12-1);
      arg1->source[12-1] = 0;
    } else {
      arg1->source[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1source_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (char *)(char *) ((arg1)->source);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1currency_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->currency, (const char *)arg2, 12-1);
      arg1->currency[12-1] = 0;
    } else {
      arg1->currency[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1currency_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (char *)(char *) ((arg1)->currency);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1digits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->digits = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1digits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->digits);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1trade_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->trade = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1trade_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->trade);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1background_1color_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  COLORREF arg2 ;
  COLORREF *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  argp2 = *(COLORREF **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null COLORREF");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->background_color = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1background_1color_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  COLORREF result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result =  ((arg1)->background_color);
  *(COLORREF **)&jresult = new COLORREF((const COLORREF &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1count_1original_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->count_original = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1count_1original_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->count_original);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1external_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->external_unused;
    for (ii = 0; ii < (size_t)7; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1external_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int *)(int *) ((arg1)->external_unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1realtime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->realtime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1realtime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->realtime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1starting_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->starting = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1starting_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (time_t) ((arg1)->starting);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1expiration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->expiration = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1expiration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (time_t) ((arg1)->expiration);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1sessions_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  ConSessions *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = *(ConSessions **)&jarg2; 
  {
    size_t ii;
    ConSessions *b = (ConSessions *) arg1->sessions;
    for (ii = 0; ii < (size_t)7; ii++) b[ii] = *((ConSessions *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1sessions_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  ConSessions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (ConSessions *)(ConSessions *) ((arg1)->sessions);
  *(ConSessions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1profit_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->profit_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1profit_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->profit_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1profit_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->profit_reserved = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1profit_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->profit_reserved);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->filter = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->filter);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1counter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->filter_counter = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1counter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->filter_counter);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1limit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->filter_limit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1limit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->filter_limit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1smoothing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->filter_smoothing = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1smoothing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->filter_smoothing);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  float arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (float)jarg2; 
  if (arg1) (arg1)->filter_reserved = arg2;
}


SWIGEXPORT jfloat JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1filter_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jfloat jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (float) ((arg1)->filter_reserved);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1logging_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->logging = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1logging_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->logging);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1spread_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1spread_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->spread);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1spread_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread_balance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1spread_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->spread_balance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1exemode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exemode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1exemode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->exemode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->swap_enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->swap_enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->swap_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->swap_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1long_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->swap_long = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1long_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->swap_long);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1short_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->swap_short = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1short_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->swap_short);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1rollover3days_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->swap_rollover3days = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1rollover3days_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->swap_rollover3days);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1contract_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->contract_size = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1contract_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->contract_size);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1tick_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->tick_value = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1tick_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->tick_value);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1tick_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->tick_size = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1tick_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->tick_size);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1stops_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stops_level = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1stops_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->stops_level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1gtc_1pendings_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gtc_pendings = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1gtc_1pendings_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->gtc_pendings);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->margin_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1initial_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_initial = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1initial_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->margin_initial);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1maintenance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_maintenance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1maintenance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->margin_maintenance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1hedged_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_hedged = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1hedged_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->margin_hedged);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1divider_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_divider = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1divider_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->margin_divider);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1point_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->point = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1point_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->point);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1multiply_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->multiply = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1multiply_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->multiply);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1bid_1tickvalue_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bid_tickvalue = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1bid_1tickvalue_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->bid_tickvalue);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1ask_1tickvalue_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ask_tickvalue = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1ask_1tickvalue_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (double) ((arg1)->ask_tickvalue);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1long_1only_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->long_only = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1long_1only_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->long_only);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1instant_1max_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->instant_max_volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1instant_1max_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->instant_max_volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1currency_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->margin_currency, (const char *)arg2, 12-1);
      arg1->margin_currency[12-1] = 0;
    } else {
      arg1->margin_currency[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1currency_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (char *)(char *) ((arg1)->margin_currency);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1freeze_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->freeze_level = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1freeze_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->freeze_level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1hedged_1strong_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_hedged_strong = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1margin_1hedged_1strong_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->margin_hedged_strong);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1value_1date_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->value_date = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1value_1date_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (time_t) ((arg1)->value_date);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1quotes_1delay_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->quotes_delay = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1quotes_1delay_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->quotes_delay);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1openprice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->swap_openprice = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1openprice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->swap_openprice);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1variation_1margin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->swap_variation_margin = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1swap_1variation_1margin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int) ((arg1)->swap_variation_margin);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->unused;
    for (ii = 0; ii < (size_t)21; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbol_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbol **)&jarg1; 
  result = (int *)(int *) ((arg1)->unused);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSymbol(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConSymbol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConSymbol *)new ConSymbol();
  *(ConSymbol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSymbol(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConSymbol *arg1 = (ConSymbol *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConSymbol **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXE_1REQUEST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXE_REQUEST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXE_1INSTANT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXE_INSTANT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_EXE_1MARKET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)EXE_MARKET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1NO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_NO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRADE_1FULL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRADE_FULL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SWAP_1BY_1POINTS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SWAP_BY_POINTS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SWAP_1BY_1DOLLARS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SWAP_BY_DOLLARS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SWAP_1BY_1INTEREST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SWAP_BY_INTEREST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SWAP_1BY_1MARGIN_1CURRENCY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SWAP_BY_MARGIN_CURRENCY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PROFIT_1CALC_1FOREX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PROFIT_CALC_FOREX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PROFIT_1CALC_1CFD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PROFIT_CALC_CFD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PROFIT_1CALC_1FUTURES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PROFIT_CALC_FUTURES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1CALC_1FOREX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_CALC_FOREX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1CALC_1CFD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_CALC_CFD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1CALC_1FUTURES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_CALC_FUTURES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1CALC_1CFDINDEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_CALC_CFDINDEX;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGIN_1CALC_1CFDLEVERAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGIN_CALC_CFDLEVERAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ORDERS_1DAILY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ORDERS_DAILY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ORDERS_1GTC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ORDERS_GTC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ORDERS_1DAILY_1NO_1STOPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ORDERS_DAILY_NO_STOPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MAX_1SEC_1GROUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((32));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolGroup_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbolGroup *arg1 = (ConSymbolGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbolGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 16-1);
      arg1->name[16-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolGroup_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbolGroup *arg1 = (ConSymbolGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbolGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolGroup_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSymbolGroup *arg1 = (ConSymbolGroup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbolGroup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->description, (const char *)arg2, 64-1);
      arg1->description[64-1] = 0;
    } else {
      arg1->description[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSymbolGroup_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSymbolGroup *arg1 = (ConSymbolGroup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSymbolGroup **)&jarg1; 
  result = (char *)(char *) ((arg1)->description);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSymbolGroup(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConSymbolGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConSymbolGroup *)new ConSymbolGroup();
  *(ConSymbolGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSymbolGroup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConSymbolGroup *arg1 = (ConSymbolGroup *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConSymbolGroup **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->server, (const char *)arg2, 64-1);
      arg1->server[64-1] = 0;
    } else {
      arg1->server[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (char *)(char *) ((arg1)->server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1unusedport_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->unusedport = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1unusedport_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (int) ((arg1)->unusedport);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->login, (const char *)arg2, 32-1);
      arg1->login[32-1] = 0;
    } else {
      arg1->login[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (char *)(char *) ((arg1)->login);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->password, (const char *)arg2, 32-1);
      arg1->password[32-1] = 0;
    } else {
      arg1->password[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (char *)(char *) ((arg1)->password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (int) ((arg1)->mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (time_t) ((arg1)->from);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (time_t) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1securities_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->securities, (const char *)arg2, 1024-1);
      arg1->securities[1024-1] = 0;
    } else {
      arg1->securities[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1securities_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (char *)(char *) ((arg1)->securities);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1timecorrection_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->timecorrection = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1timecorrection_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (int) ((arg1)->timecorrection);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConSync *arg1 = (ConSync *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)13; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConSync *arg1 = (ConSync *) 0 ;
  ConSync *arg2 = (ConSync *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConSync **)&jarg1; 
  arg2 = *(ConSync **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConSync_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConSync *arg1 = (ConSync *) 0 ;
  ConSync *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConSync **)&jarg1; 
  result = (ConSync *) ((arg1)->next);
  *(ConSync **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConSync(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConSync *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConSync *)new ConSync();
  *(ConSync **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConSync(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConSync *arg1 = (ConSync *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConSync **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_HB_1ADD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)HB_ADD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_HB_1UPDATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)HB_UPDATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_HB_1INSERT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)HB_INSERT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_HB_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)HB_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_HB_1LAST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)HB_LAST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 128-1);
      arg1->name[128-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->version = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  result = (unsigned int) ((arg1)->version);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1copyright_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->copyright, (const char *)arg2, 128-1);
      arg1->copyright[128-1] = 0;
    } else {
      arg1->copyright[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1copyright_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->copyright);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginInfo_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginInfo **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1PluginInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  PluginInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (PluginInfo *)new PluginInfo();
  *(PluginInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1PluginInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  PluginInfo *arg1 = (PluginInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(PluginInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 32-1);
      arg1->name[32-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->value, (const char *)arg2, 128-1);
      arg1->value[128-1] = 0;
    } else {
      arg1->value[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  result = (char *)(char *) ((arg1)->value);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PluginCfg_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PluginCfg **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1PluginCfg(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  PluginCfg *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (PluginCfg *)new PluginCfg();
  *(PluginCfg **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1PluginCfg(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  PluginCfg *arg1 = (PluginCfg *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(PluginCfg **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->file, (const char *)arg2, 256-1);
      arg1->file[256-1] = 0;
    } else {
      arg1->file[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (char *)(char *) ((arg1)->file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1info_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  PluginInfo *arg2 = (PluginInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = *(PluginInfo **)&jarg2; 
  if (arg1) (arg1)->info = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1info_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  PluginInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (PluginInfo *)& ((arg1)->info);
  *(PluginInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1enabled_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enabled = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1enabled_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (int) ((arg1)->enabled);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1configurable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->configurable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1configurable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (int) ((arg1)->configurable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1manager_1access_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->manager_access = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1manager_1access_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (int) ((arg1)->manager_access);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)62; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPlugin_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPlugin **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConPlugin(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConPlugin *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConPlugin *)new ConPlugin();
  *(ConPlugin **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConPlugin(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConPlugin *arg1 = (ConPlugin *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConPlugin **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1plugin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  ConPlugin *arg2 = (ConPlugin *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConPluginParam **)&jarg1; 
  arg2 = *(ConPlugin **)&jarg2; 
  if (arg1) (arg1)->plugin = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1plugin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  ConPlugin *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPluginParam **)&jarg1; 
  result = (ConPlugin *)& ((arg1)->plugin);
  *(ConPlugin **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1params_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  PluginCfg *arg2 = (PluginCfg *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ConPluginParam **)&jarg1; 
  arg2 = *(PluginCfg **)&jarg2; 
  if (arg1) (arg1)->params = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1params_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  PluginCfg *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPluginParam **)&jarg1; 
  result = (PluginCfg *) ((arg1)->params);
  *(PluginCfg **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1total_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPluginParam **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->total = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConPluginParam_1total_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConPluginParam **)&jarg1; 
  result = (int) ((arg1)->total);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConPluginParam(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConPluginParam *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConPluginParam *)new ConPluginParam();
  *(ConPluginParam **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConPluginParam(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConPluginParam *arg1 = (ConPluginParam *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConPluginParam **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 64-1);
      arg1->name[64-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int) ((arg1)->id);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1address_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->address, (const char *)arg2, 64-1);
      arg1->address[64-1] = 0;
    } else {
      arg1->address[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1address_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (char *)(char *) ((arg1)->address);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->password, (const char *)arg2, 64-1);
      arg1->password[64-1] = 0;
    } else {
      arg1->password[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (char *)(char *) ((arg1)->password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1notify_1logins_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->notify_logins;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1notify_1logins_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int *)(int *) ((arg1)->notify_logins);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int) ((arg1)->flags);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)23; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayAccount_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGatewayAccount(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGatewayAccount *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGatewayAccount *)new ConGatewayAccount();
  *(ConGatewayAccount **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGatewayAccount(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGatewayAccount *arg1 = (ConGatewayAccount *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGatewayAccount **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GATEWAY_1FLAG_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnGatewayAccountFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnGatewayAccountFlags)GATEWAY_FLAG_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GATEWAY_1FLAG_1QUOTES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnGatewayAccountFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnGatewayAccountFlags)GATEWAY_FLAG_QUOTES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1source_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->source, (const char *)arg2, 128-1);
      arg1->source[128-1] = 0;
    } else {
      arg1->source[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1source_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (char *)(char *) ((arg1)->source);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1account_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->account_name, (const char *)arg2, 64-1);
      arg1->account_name[64-1] = 0;
    } else {
      arg1->account_name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1account_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (char *)(char *) ((arg1)->account_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1account_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->account_id = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1account_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (int) ((arg1)->account_id);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1bid_1markup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bid_markup = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1bid_1markup_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (int) ((arg1)->bid_markup);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1ask_1markup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ask_markup = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1ask_1markup_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (int) ((arg1)->ask_markup);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)16; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayMarkup_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGatewayMarkup(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGatewayMarkup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGatewayMarkup *)new ConGatewayMarkup();
  *(ConGatewayMarkup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGatewayMarkup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGatewayMarkup *arg1 = (ConGatewayMarkup *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGatewayMarkup **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 64-1);
      arg1->name[64-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->request_symbol, (const char *)arg2, 128-1);
      arg1->request_symbol[128-1] = 0;
    } else {
      arg1->request_symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (char *)(char *) ((arg1)->request_symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->request_group, (const char *)arg2, 128-1);
      arg1->request_group[128-1] = 0;
    } else {
      arg1->request_group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (char *)(char *) ((arg1)->request_group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->request_reserved;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1request_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int *)(int *) ((arg1)->request_reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->exe_account_name, (const char *)arg2, 64-1);
      arg1->exe_account_name[64-1] = 0;
    } else {
      arg1->exe_account_name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (char *)(char *) ((arg1)->exe_account_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_account_id = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_account_id);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1deviation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_max_deviation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1deviation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_max_deviation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1profit_1slippage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_max_profit_slippage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1profit_1slippage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_max_profit_slippage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1profit_1slippage_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_max_profit_slippage_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1profit_1slippage_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_max_profit_slippage_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1losing_1slippage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_max_losing_slippage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1losing_1slippage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_max_losing_slippage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1losing_1slippage_1lots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_max_losing_slippage_lots = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1max_1losing_1slippage_1lots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_max_losing_slippage_lots);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_account_pos = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1account_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_account_pos);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1volume_1percent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exe_volume_percent = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1volume_1percent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int) ((arg1)->exe_volume_percent);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->exe_reserved;
    for (ii = 0; ii < (size_t)26; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ConGatewayRule_1exe_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ConGatewayRule **)&jarg1; 
  result = (int *)(int *) ((arg1)->exe_reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ConGatewayRule(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ConGatewayRule *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ConGatewayRule *)new ConGatewayRule();
  *(ConGatewayRule **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ConGatewayRule(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ConGatewayRule *arg1 = (ConGatewayRule *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ConGatewayRule **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1OK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_OK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1OK_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_OK_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1ERROR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_ERROR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1INVALID_1DATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_INVALID_DATA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TECH_1PROBLEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TECH_PROBLEM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1OLD_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_OLD_VERSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1NO_1CONNECT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_NO_CONNECT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1NOT_1ENOUGH_1RIGHTS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_NOT_ENOUGH_RIGHTS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TOO_1FREQUENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TOO_FREQUENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1MALFUNCTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_MALFUNCTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1GENERATE_1KEY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_GENERATE_KEY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1SECURITY_1SESSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_SECURITY_SESSION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1ACCOUNT_1DISABLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_ACCOUNT_DISABLED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1BAD_1ACCOUNT_1INFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_BAD_ACCOUNT_INFO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1PUBLIC_1KEY_1MISSING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_PUBLIC_KEY_MISSING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1TIMEOUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_TIMEOUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1BAD_1PRICES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_BAD_PRICES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1BAD_1STOPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_BAD_STOPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1BAD_1VOLUME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_BAD_VOLUME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1MARKET_1CLOSED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_MARKET_CLOSED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1DISABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_DISABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1NO_1MONEY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_NO_MONEY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1PRICE_1CHANGED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_PRICE_CHANGED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1OFFQUOTES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_OFFQUOTES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1BROKER_1BUSY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_BROKER_BUSY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1REQUOTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_REQUOTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1ORDER_1LOCKED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_ORDER_LOCKED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1LONG_1ONLY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_LONG_ONLY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1TOO_1MANY_1REQ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_TOO_MANY_REQ;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1ACCEPTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_ACCEPTED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1PROCESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_PROCESS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1USER_1CANCEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_USER_CANCEL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1MODIFY_1DENIED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_MODIFY_DENIED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1CONTEXT_1BUSY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_CONTEXT_BUSY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1EXPIRATION_1DENIED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_EXPIRATION_DENIED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1TOO_1MANY_1ORDERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_TOO_MANY_ORDERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1HEDGE_1PROHIBITED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_HEDGE_PROHIBITED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RET_1TRADE_1PROHIBITED_1BY_1FIFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)RET_TRADE_PROHIBITED_BY_FIFO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1HIDETICKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_HIDETICKS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1HIDENEWS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_HIDENEWS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1HIDEMAIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_HIDEMAIL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1SENDFULLNEWS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_SENDFULLNEWS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1RESERVED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_RESERVED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1HIDEONLINE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_HIDEONLINE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CLIENT_1FLAGS_1HIDEUSERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CLIENT_FLAGS_HIDEUSERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1version_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->version = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1version_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (int) ((arg1)->version);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 128-1);
      arg1->name[128-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1copyright_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->copyright, (const char *)arg2, 128-1);
      arg1->copyright[128-1] = 0;
    } else {
      arg1->copyright[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1copyright_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->copyright);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1web_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->web, (const char *)arg2, 128-1);
      arg1->web[128-1] = 0;
    } else {
      arg1->web[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1web_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->web);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1email_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->email, (const char *)arg2, 128-1);
      arg1->email[128-1] = 0;
    } else {
      arg1->email[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1email_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->email);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1server_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->server, (const char *)arg2, 128-1);
      arg1->server[128-1] = 0;
    } else {
      arg1->server[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1server_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->server);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1username_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->username, (const char *)arg2, 32-1);
      arg1->username[32-1] = 0;
    } else {
      arg1->username[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1username_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->username);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1userpass_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->userpass, (const char *)arg2, 32-1);
      arg1->userpass[32-1] = 0;
    } else {
      arg1->userpass[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1userpass_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->userpass);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1modes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->modes = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1modes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (int) ((arg1)->modes);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1description_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->description, (const char *)arg2, 512-1);
      arg1->description[512-1] = 0;
    } else {
      arg1->description[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1description_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->description);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1module_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->module, (const char *)arg2, 32-1);
      arg1->module[32-1] = 0;
    } else {
      arg1->module[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1module_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (char *)(char *) ((arg1)->module);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)54; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_FeedDescription_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FeedDescription **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1FeedDescription(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  FeedDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (FeedDescription *)new FeedDescription();
  *(FeedDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1FeedDescription(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  FeedDescription *arg1 = (FeedDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(FeedDescription **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_modeOnlyQuotes_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  FeederModes result;
  
  (void)jenv;
  (void)jcls;
  result = (FeederModes)modeOnlyQuotes;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_modeOnlyNews_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  FeederModes result;
  
  (void)jenv;
  (void)jcls;
  result = (FeederModes)modeOnlyNews;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_modeQuotesAndNews_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  FeederModes result;
  
  (void)jenv;
  (void)jcls;
  result = (FeederModes)modeQuotesAndNews;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_modeQuotesOrNews_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  FeederModes result;
  
  (void)jenv;
  (void)jcls;
  result = (FeederModes)modeQuotesOrNews;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerFeed_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ServerFeed *arg1 = (ServerFeed *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerFeed **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->file, (const char *)arg2, 256-1);
      arg1->file[256-1] = 0;
    } else {
      arg1->file[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerFeed_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ServerFeed *arg1 = (ServerFeed *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerFeed **)&jarg1; 
  result = (char *)(char *) ((arg1)->file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerFeed_1feed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  ServerFeed *arg1 = (ServerFeed *) 0 ;
  FeedDescription *arg2 = (FeedDescription *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(ServerFeed **)&jarg1; 
  arg2 = *(FeedDescription **)&jarg2; 
  if (arg1) (arg1)->feed = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerFeed_1feed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ServerFeed *arg1 = (ServerFeed *) 0 ;
  FeedDescription *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerFeed **)&jarg1; 
  result = (FeedDescription *)& ((arg1)->feed);
  *(FeedDescription **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ServerFeed(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ServerFeed *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ServerFeed *)new ServerFeed();
  *(ServerFeed **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ServerFeed(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ServerFeed *arg1 = (ServerFeed *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ServerFeed **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1period_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->period = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1period_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (int) ((arg1)->period);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1start_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->start = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1start_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (time_t) ((arg1)->start);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1end_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->end = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1end_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (time_t) ((arg1)->end);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1timesign_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->timesign = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1timesign_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (time_t) ((arg1)->timesign);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->mode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ChartInfo_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ChartInfo **)&jarg1; 
  result = (int) ((arg1)->mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ChartInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ChartInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ChartInfo *)new ChartInfo();
  *(ChartInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ChartInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ChartInfo *arg1 = (ChartInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ChartInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1M1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_M1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1M5_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_M5;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1M15_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_M15;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1M30_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_M30;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1H1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_H1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1H4_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_H4;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1D1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_D1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1W1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_W1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PERIOD_1MN1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PERIOD_MN1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CHART_1RANGE_1IN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CHART_RANGE_IN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CHART_1RANGE_1OUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CHART_RANGE_OUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CHART_1RANGE_1LAST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)CHART_RANGE_LAST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1open_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->open = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1open_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (int) ((arg1)->open);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1high_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->high = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1high_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (short) ((arg1)->high);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1low_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->low = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1low_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (short) ((arg1)->low);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1close_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->close = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1close_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (short) ((arg1)->close);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1vol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->vol = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfoOld_1vol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfoOld **)&jarg1; 
  result = (double) ((arg1)->vol);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1RateInfoOld(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RateInfoOld *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RateInfoOld *)new RateInfoOld();
  *(RateInfoOld **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1RateInfoOld(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RateInfoOld *arg1 = (RateInfoOld *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RateInfoOld **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1open_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->open = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1open_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (int) ((arg1)->open);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1high_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->high = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1high_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (int) ((arg1)->high);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1low_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->low = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1low_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (int) ((arg1)->low);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1close_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->close = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1close_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (int) ((arg1)->close);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1vol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->vol = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RateInfo_1vol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  RateInfo *arg1 = (RateInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RateInfo **)&jarg1; 
  result = (double) ((arg1)->vol);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1RateInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RateInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RateInfo *)new RateInfo();
  *(RateInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1RateInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RateInfo *arg1 = (RateInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RateInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TickRecord *arg1 = (TickRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1bid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bid = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1bid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TickRecord *arg1 = (TickRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  result = (double) ((arg1)->bid);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1ask_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ask = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1ask_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TickRecord *arg1 = (TickRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  result = (double) ((arg1)->ask);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1datafeed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->datafeed = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1datafeed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TickRecord *arg1 = (TickRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  result = (int) ((arg1)->datafeed);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRecord_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  TickRecord *arg1 = (TickRecord *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRecord **)&jarg1; 
  result = (char) ((arg1)->flags);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TickRecord(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TickRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TickRecord *)new TickRecord();
  *(TickRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TickRecord(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TickRecord *arg1 = (TickRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TickRecord **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TICK_1FLAG_1RAW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TICK_FLAG_RAW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TICK_1FLAG_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TICK_FLAG_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TICK_1FLAG_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TICK_FLAG_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TickRequest *arg1 = (TickRequest *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TickRequest *arg1 = (TickRequest *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TickRequest *arg1 = (TickRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TickRequest *arg1 = (TickRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  result = (time_t) ((arg1)->from);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TickRequest *arg1 = (TickRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TickRequest *arg1 = (TickRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  result = (time_t) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  TickRequest *arg1 = (TickRequest *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickRequest_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  TickRequest *arg1 = (TickRequest *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickRequest **)&jarg1; 
  result = (char) ((arg1)->flags);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TickRequest(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TickRequest *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TickRequest *)new TickRequest();
  *(TickRequest **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TickRequest(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TickRequest *arg1 = (TickRequest *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TickRequest **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1users_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->users = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1users_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (short) ((arg1)->users);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1cpu_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->cpu = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1cpu_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (short) ((arg1)->cpu);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1freemem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->freemem = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1freemem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (int) ((arg1)->freemem);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1network_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->network = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1network_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (int) ((arg1)->network);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1sockets_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sockets = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PerformanceInfo_1sockets_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PerformanceInfo **)&jarg1; 
  result = (int) ((arg1)->sockets);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1PerformanceInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  PerformanceInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (PerformanceInfo *)new PerformanceInfo();
  *(PerformanceInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1PerformanceInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  PerformanceInfo *arg1 = (PerformanceInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(PerformanceInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1file_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->file, (const char *)arg2, 256-1);
      arg1->file[256-1] = 0;
    } else {
      arg1->file[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1file_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->file);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  result = (int) ((arg1)->size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  result = (time_t) ((arg1)->time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)6; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BackupInfo_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BackupInfo **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1BackupInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  BackupInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (BackupInfo *)new BackupInfo();
  *(BackupInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1BackupInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  BackupInfo *arg1 = (BackupInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(BackupInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUPS_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUPS_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUPS_1PERIODICAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUPS_PERIODICAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUPS_1STARTUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUPS_STARTUP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BACKUPS_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)BACKUPS_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRANS_1ADD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRANS_ADD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRANS_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRANS_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRANS_1UPDATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRANS_UPDATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TRANS_1CHANGE_1GRP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TRANS_CHANGE_GRP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUBLIC_1KEY_1SIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(272);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_USER_1COLOR_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0xFF000000));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->password, (const char *)arg2, 16-1);
      arg1->password[16-1] = 0;
    } else {
      arg1->password[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->password);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->enable);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1change_1password_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable_change_password = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1change_1password_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->enable_change_password);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1read_1only_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable_read_only = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1read_1only_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->enable_read_only);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1otp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->enable_otp = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1otp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->enable_otp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->enable_reserved;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1enable_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int *)(int *) ((arg1)->enable_reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1investor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->password_investor, (const char *)arg2, 16-1);
      arg1->password_investor[16-1] = 0;
    } else {
      arg1->password_investor[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1investor_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->password_investor);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1phone_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->password_phone, (const char *)arg2, 32-1);
      arg1->password_phone[32-1] = 0;
    } else {
      arg1->password_phone[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1password_1phone_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->password_phone);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 128-1);
      arg1->name[128-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1country_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->country, (const char *)arg2, 32-1);
      arg1->country[32-1] = 0;
    } else {
      arg1->country[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1country_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->country);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1city_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->city, (const char *)arg2, 32-1);
      arg1->city[32-1] = 0;
    } else {
      arg1->city[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1city_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->city);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->state, (const char *)arg2, 32-1);
      arg1->state[32-1] = 0;
    } else {
      arg1->state[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->state);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1zipcode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->zipcode, (const char *)arg2, 16-1);
      arg1->zipcode[16-1] = 0;
    } else {
      arg1->zipcode[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1zipcode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->zipcode);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1address_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->address, (const char *)arg2, 96-1);
      arg1->address[96-1] = 0;
    } else {
      arg1->address[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1address_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->address);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1lead_1source_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->lead_source, (const char *)arg2, 32-1);
      arg1->lead_source[32-1] = 0;
    } else {
      arg1->lead_source[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1lead_1source_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->lead_source);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1phone_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->phone, (const char *)arg2, 32-1);
      arg1->phone[32-1] = 0;
    } else {
      arg1->phone[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1phone_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->phone);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1email_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->email, (const char *)arg2, 48-1);
      arg1->email[48-1] = 0;
    } else {
      arg1->email[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1email_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->email);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1comment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->comment, (const char *)arg2, 64-1);
      arg1->comment[64-1] = 0;
    } else {
      arg1->comment[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1comment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->comment);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->id, (const char *)arg2, 32-1);
      arg1->id[32-1] = 0;
    } else {
      arg1->id[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->id);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->status, (const char *)arg2, 16-1);
      arg1->status[16-1] = 0;
    } else {
      arg1->status[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->status);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1regdate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->regdate = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1regdate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (time_t) ((arg1)->regdate);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1lastdate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->lastdate = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1lastdate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (time_t) ((arg1)->lastdate);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1leverage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->leverage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1leverage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->leverage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1agent_1account_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->agent_account = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1agent_1account_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->agent_account);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1timestamp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->timestamp = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1timestamp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (time_t) ((arg1)->timestamp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1last_1ip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->last_ip = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1last_1ip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->last_ip);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->balance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->balance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevmonthbalance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->prevmonthbalance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevmonthbalance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->prevmonthbalance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevbalance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->prevbalance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevbalance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->prevbalance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1credit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->credit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1credit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->credit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1interestrate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->interestrate = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1interestrate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->interestrate);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1taxes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->taxes = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1taxes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->taxes);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevmonthequity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->prevmonthequity = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevmonthequity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->prevmonthequity);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevequity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->prevequity = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1prevequity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double) ((arg1)->prevequity);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1reserved2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  double *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  {
    size_t ii;
    double *b = (double *) arg1->reserved2;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1reserved2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (double *)(double *) ((arg1)->reserved2);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1otp_1secret_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->otp_secret, (const char *)arg2, 32-1);
      arg1->otp_secret[32-1] = 0;
    } else {
      arg1->otp_secret[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1otp_1secret_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->otp_secret);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1secure_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->secure_reserved, (const char *)arg2, 240-1);
      arg1->secure_reserved[240-1] = 0;
    } else {
      arg1->secure_reserved[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1secure_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->secure_reserved);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1send_1reports_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->send_reports = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1send_1reports_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (int) ((arg1)->send_reports);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1mqid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->mqid = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1mqid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (unsigned int) ((arg1)->mqid);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1user_1color_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  COLORREF arg2 ;
  COLORREF *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  argp2 = *(COLORREF **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null COLORREF");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->user_color = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1user_1color_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  COLORREF result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result =  ((arg1)->user_color);
  *(COLORREF **)&jresult = new COLORREF((const COLORREF &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1unused_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->unused, (const char *)arg2, 40-1);
      arg1->unused[40-1] = 0;
    } else {
      arg1->unused[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1unused_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->unused);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1api_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->api_data, (const char *)arg2, 16-1);
      arg1->api_data[16-1] = 0;
    } else {
      arg1->api_data[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_UserRecord_1api_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  UserRecord *arg1 = (UserRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(UserRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->api_data);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1UserRecord(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (UserRecord *)new UserRecord();
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1UserRecord(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  UserRecord *arg1 = (UserRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(UserRecord **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->len = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  result = (int) ((arg1)->len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1command_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->command = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1command_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  result = (char) ((arg1)->command);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1newgroup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->newgroup, (const char *)arg2, 16-1);
      arg1->newgroup[16-1] = 0;
    } else {
      arg1->newgroup[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1newgroup_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->newgroup);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1leverage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->leverage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1leverage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  result = (int) ((arg1)->leverage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GroupCommandInfo_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1GroupCommandInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  GroupCommandInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (GroupCommandInfo *)new GroupCommandInfo();
  *(GroupCommandInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1GroupCommandInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  GroupCommandInfo *arg1 = (GroupCommandInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(GroupCommandInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GROUP_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GROUP_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GROUP_1ENABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GROUP_ENABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GROUP_1DISABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GROUP_DISABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GROUP_1LEVERAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GROUP_LEVERAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_GROUP_1SETGROUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GROUP_SETGROUP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1counter_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->counter = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1counter_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  result = (int) ((arg1)->counter);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->reserved = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  result = (int) ((arg1)->reserved);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1ip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->ip = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1ip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  result = (UINT) ((arg1)->ip);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OnlineRecord_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(OnlineRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1OnlineRecord(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  OnlineRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (OnlineRecord *)new OnlineRecord();
  *(OnlineRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1OnlineRecord(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  OnlineRecord *arg1 = (OnlineRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(OnlineRecord **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->order = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1digits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->digits = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1digits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->digits);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1cmd_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->cmd = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1cmd_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->cmd);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1open_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->open_time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1open_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (time_t) ((arg1)->open_time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->state);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1open_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->open_price = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1open_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->open_price);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1sl_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->sl = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1sl_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->sl);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1tp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->tp = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1tp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->tp);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1close_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->close_time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1close_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (time_t) ((arg1)->close_time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gw_volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->gw_volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1expiration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->expiration = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1expiration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (time_t) ((arg1)->expiration);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1reason_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->reason = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1reason_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (char) ((arg1)->reason);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1conv_1reserv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->conv_reserv, (const char *)arg2, 3-1);
      arg1->conv_reserv[3-1] = 0;
    } else {
      arg1->conv_reserv[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1conv_1reserv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->conv_reserv);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1conv_1rates_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  {
    size_t ii;
    double *b = (double *) arg1->conv_rates;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1conv_1rates_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double *)(double *) ((arg1)->conv_rates);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1commission_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->commission = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1commission_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->commission);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1commission_1agent_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->commission_agent = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1commission_1agent_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->commission_agent);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1storage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->storage = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1storage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->storage);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1close_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->close_price = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1close_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->close_price);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1profit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->profit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1profit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->profit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1taxes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->taxes = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1taxes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->taxes);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1magic_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->magic = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1magic_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->magic);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1comment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->comment, (const char *)arg2, 32-1);
      arg1->comment[32-1] = 0;
    } else {
      arg1->comment[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1comment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (char *)(char *) ((arg1)->comment);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gw_order = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->gw_order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1activation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->activation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1activation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int) ((arg1)->activation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1open_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->gw_open_price = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1open_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (short) ((arg1)->gw_open_price);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1close_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->gw_close_price = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1gw_1close_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (short) ((arg1)->gw_close_price);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1margin_1rate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_rate = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1margin_1rate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (double) ((arg1)->margin_rate);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1timestamp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->timestamp = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1timestamp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (time_t) ((arg1)->timestamp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1api_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->api_data;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1api_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (int *)(int *) ((arg1)->api_data);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  TradeRecord *arg2 = (TradeRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(TradeRecord **)&jarg1; 
  arg2 = *(TradeRecord **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRecord_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRecord **)&jarg1; 
  result = (TradeRecord *) ((arg1)->next);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TradeRecord(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TradeRecord *)new TradeRecord();
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TradeRecord(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TradeRecord *arg1 = (TradeRecord *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TradeRecord **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1BUY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_BUY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1SELL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_SELL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1BUY_1LIMIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_BUY_LIMIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1SELL_1LIMIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_SELL_LIMIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1BUY_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_BUY_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1SELL_1STOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_SELL_STOP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1BALANCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_BALANCE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_OP_1CREDIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)OP_CREDIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1OPEN_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_OPEN_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1OPEN_1REMAND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_OPEN_REMAND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1OPEN_1RESTORED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_OPEN_RESTORED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1CLOSED_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_CLOSED_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1CLOSED_1PART_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_CLOSED_PART;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1CLOSED_1BY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_CLOSED_BY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TS_1DELETED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TS_DELETED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1CLIENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_CLIENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1EXPERT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_EXPERT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1DEALER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_DEALER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1SIGNAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_SIGNAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1GATEWAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_GATEWAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1MOBILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_MOBILE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1WEB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_WEB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TR_1REASON_1API_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TR_REASON_API;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1SL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_SL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1TP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_TP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1PENDING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_PENDING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1STOPOUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_STOPOUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1SL_1ROLLBACK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_SL_ROLLBACK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1TP_1ROLLBACK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_TP_ROLLBACK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1PENDING_1ROLLBACK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_PENDING_ROLLBACK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ACTIVATION_1STOPOUT_1ROLLBACK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)ACTIVATION_STOPOUT_ROLLBACK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRestoreResult_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeRestoreResult *arg1 = (TradeRestoreResult *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRestoreResult **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->order = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRestoreResult_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeRestoreResult *arg1 = (TradeRestoreResult *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRestoreResult **)&jarg1; 
  result = (int) ((arg1)->order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRestoreResult_1res_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  TradeRestoreResult *arg1 = (TradeRestoreResult *) 0 ;
  UCHAR arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRestoreResult **)&jarg1; 
  arg2 = (UCHAR)jarg2; 
  if (arg1) (arg1)->res = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeRestoreResult_1res_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  TradeRestoreResult *arg1 = (TradeRestoreResult *) 0 ;
  UCHAR result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeRestoreResult **)&jarg1; 
  result = (UCHAR) ((arg1)->res);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TradeRestoreResult(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TradeRestoreResult *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TradeRestoreResult *)new TradeRestoreResult();
  *(TradeRestoreResult **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TradeRestoreResult(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TradeRestoreResult *arg1 = (TradeRestoreResult *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TradeRestoreResult **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  UCHAR arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (UCHAR)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  UCHAR result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (UCHAR) ((arg1)->type);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (char) ((arg1)->flags);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1cmd_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->cmd = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1cmd_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (short) ((arg1)->cmd);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->order = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (int) ((arg1)->order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1orderby_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->orderby = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1orderby_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (int) ((arg1)->orderby);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (int) ((arg1)->volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->price = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (double) ((arg1)->price);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1sl_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->sl = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1sl_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (double) ((arg1)->sl);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1tp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->tp = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1tp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (double) ((arg1)->tp);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1ie_1deviation_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ie_deviation = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1ie_1deviation_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (int) ((arg1)->ie_deviation);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1comment_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->comment, (const char *)arg2, 32-1);
      arg1->comment[32-1] = 0;
    } else {
      arg1->comment[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1comment_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->comment);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1expiration_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->expiration = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1expiration_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (time_t) ((arg1)->expiration);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1crc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->crc = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TradeTransInfo_1crc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TradeTransInfo **)&jarg1; 
  result = (int) ((arg1)->crc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TradeTransInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TradeTransInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TradeTransInfo *)new TradeTransInfo();
  *(TradeTransInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TradeTransInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TradeTransInfo *arg1 = (TradeTransInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TradeTransInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1PRICES_1GET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_PRICES_GET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1PRICES_1REQUOTE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_PRICES_REQUOTE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1IE_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_IE_OPEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1REQ_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_REQ_OPEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1MK_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_MK_OPEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1PENDING_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_PENDING_OPEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1IE_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_IE_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1REQ_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_REQ_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1MK_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_MK_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1MODIFY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_MODIFY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1CLOSE_1BY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_CLOSE_BY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1ORDER_1CLOSE_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_ORDER_CLOSE_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_OPEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1CLOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_CLOSE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1DELETE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_DELETE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1CLOSE_1BY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_CLOSE_BY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1CLOSE_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_CLOSE_ALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1MODIFY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_MODIFY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1ACTIVATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_ACTIVATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1ORDER_1COMMENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_ORDER_COMMENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1BR_1BALANCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)TT_BR_BALANCE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1SIGNAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_SIGNAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1EXPERT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_EXPERT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1GATEWAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_GATEWAY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1MOBILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_MOBILE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1WEB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_WEB;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TT_1FLAG_1API_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnReqFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (EnReqFlags)TT_FLAG_API;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1leverage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->leverage = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1leverage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->leverage);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1updated_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->updated = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1updated_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->updated);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->balance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (double) ((arg1)->balance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1equity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->equity = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1equity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (double) ((arg1)->equity);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (double) ((arg1)->margin);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1free_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_free = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1free_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (double) ((arg1)->margin_free);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_level = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (double) ((arg1)->margin_level);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->margin_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1margin_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->margin_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1level_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->level_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MarginLevel_1level_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MarginLevel **)&jarg1; 
  result = (int) ((arg1)->level_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1MarginLevel(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MarginLevel *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MarginLevel *)new MarginLevel();
  *(MarginLevel **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1MarginLevel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MarginLevel *arg1 = (MarginLevel *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MarginLevel **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGINLEVEL_1OK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGINLEVEL_OK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGINLEVEL_1MARGINCALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGINLEVEL_MARGINCALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MARGINLEVEL_1STOPOUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)MARGINLEVEL_STOPOUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (int) ((arg1)->id);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1status_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jchar jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (char)jarg2; 
  if (arg1) (arg1)->status = arg2;
}


SWIGEXPORT jchar JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1status_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jchar jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (char) ((arg1)->status);
  jresult = (jchar)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  DWORD arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (DWORD)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  DWORD result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (DWORD) ((arg1)->time);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1manager_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->manager = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1manager_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (int) ((arg1)->manager);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->balance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (double) ((arg1)->balance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1credit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->credit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1credit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (double) ((arg1)->credit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1prices_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  {
    size_t ii;
    double *b = (double *) arg1->prices;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((double *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1prices_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (double *)(double *) ((arg1)->prices);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1trade_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  TradeTransInfo *arg2 = (TradeTransInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = *(TradeTransInfo **)&jarg2; 
  if (arg1) (arg1)->trade = *arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1trade_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  TradeTransInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (TradeTransInfo *)& ((arg1)->trade);
  *(TradeTransInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1volume_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gw_volume = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1volume_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (int) ((arg1)->gw_volume);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gw_order = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (int) ((arg1)->gw_order);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1price_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->gw_price = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1gw_1price_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (short) ((arg1)->gw_price);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1prev_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  RequestInfo *arg2 = (RequestInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = *(RequestInfo **)&jarg2; 
  if (arg1) (arg1)->prev = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1prev_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  RequestInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (RequestInfo *) ((arg1)->prev);
  *(RequestInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  RequestInfo *arg2 = (RequestInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(RequestInfo **)&jarg1; 
  arg2 = *(RequestInfo **)&jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_RequestInfo_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  RequestInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(RequestInfo **)&jarg1; 
  result = (RequestInfo *) ((arg1)->next);
  *(RequestInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1RequestInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  RequestInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (RequestInfo *)new RequestInfo();
  *(RequestInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1RequestInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  RequestInfo *arg1 = (RequestInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(RequestInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1EMPTY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_EMPTY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1REQUEST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_REQUEST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1LOCKED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_LOCKED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1ANSWERED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_ANSWERED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1RESETED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_RESETED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DC_1CANCELED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DC_CANCELED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIRM_1MODE_1ADD_1PRICES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnConfirmModes result;
  
  (void)jenv;
  (void)jcls;
  result = (EnConfirmModes)CONFIRM_MODE_ADD_PRICES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CONFIRM_1MODE_1PACKET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnConfirmModes result;
  
  (void)jenv;
  (void)jcls;
  result = (EnConfirmModes)CONFIRM_MODE_PACKET;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1group_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->group, (const char *)arg2, 16-1);
      arg1->group[16-1] = 0;
    } else {
      arg1->group[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1group_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (char *)(char *) ((arg1)->group);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1bank_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->bank, (const char *)arg2, 64-1);
      arg1->bank[64-1] = 0;
    } else {
      arg1->bank[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1bank_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (char *)(char *) ((arg1)->bank);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1balance_1prev_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->balance_prev = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1balance_1prev_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->balance_prev);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->balance = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->balance);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1deposit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->deposit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1deposit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->deposit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1credit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->credit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1credit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->credit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1profit_1closed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->profit_closed = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1profit_1closed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->profit_closed);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1profit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->profit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1profit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->profit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1equity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->equity = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1equity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->equity);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1margin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1margin_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->margin);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1margin_1free_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->margin_free = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1margin_1free_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (double) ((arg1)->margin_free);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->next = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (int) ((arg1)->next);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyReport_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  DailyReport *arg1 = (DailyReport *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyReport **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1DailyReport(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  DailyReport *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (DailyReport *)new DailyReport();
  *(DailyReport **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1DailyReport(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  DailyReport *arg1 = (DailyReport *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(DailyReport **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 32-1);
      arg1->name[32-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  result = (time_t) ((arg1)->from);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  result = (time_t) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1total_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->total = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ReportGroupRequest_1total_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  result = (int) ((arg1)->total);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ReportGroupRequest(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ReportGroupRequest *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ReportGroupRequest *)new ReportGroupRequest();
  *(ReportGroupRequest **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ReportGroupRequest(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ReportGroupRequest *arg1 = (ReportGroupRequest *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ReportGroupRequest **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->name, (const char *)arg2, 32-1);
      arg1->name[32-1] = 0;
    } else {
      arg1->name[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  result = (char *)(char *) ((arg1)->name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->from = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  result = (time_t) ((arg1)->from);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  result = (time_t) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1total_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->total = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1total_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  result = (int) ((arg1)->total);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->reserved = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DailyGroupRequest_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  result = (int) ((arg1)->reserved);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1DailyGroupRequest(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  DailyGroupRequest *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (DailyGroupRequest *)new DailyGroupRequest();
  *(DailyGroupRequest **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1DailyGroupRequest(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  DailyGroupRequest *arg1 = (DailyGroupRequest *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(DailyGroupRequest **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1digits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->digits = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1digits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->digits);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1visible_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->visible = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1visible_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->visible);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1point_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->point = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1point_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->point);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1spread_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1spread_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->spread);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1spread_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread_balance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1spread_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->spread_balance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1direction_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->direction = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1direction_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->direction);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1updateflag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->updateflag = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1updateflag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->updateflag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1lasttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->lasttime = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1lasttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (time_t) ((arg1)->lasttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1bid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bid = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1bid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->bid);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1ask_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ask = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1ask_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->ask);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1high_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->high = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1high_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->high);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1low_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->low = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1low_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->low);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1commission_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->commission = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1commission_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (double) ((arg1)->commission);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1comm_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->comm_type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolInfo_1comm_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolInfo **)&jarg1; 
  result = (int) ((arg1)->comm_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1SymbolInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SymbolInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (SymbolInfo *)new SymbolInfo();
  *(SymbolInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1SymbolInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SymbolInfo *arg1 = (SymbolInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SymbolInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SDIR_1UP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SDIR_UP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SDIR_1DOWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SDIR_DOWN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SDIR_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)SDIR_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (int) ((arg1)->count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1digits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->digits = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1digits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (int) ((arg1)->digits);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1orders_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->orders = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1orders_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (int) ((arg1)->orders);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1buylots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (__int64)jarg2; 
  if (arg1) (arg1)->buylots = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1buylots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result =  ((arg1)->buylots);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1selllots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (__int64)jarg2; 
  if (arg1) (arg1)->selllots = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1selllots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result =  ((arg1)->selllots);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1buyprice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->buyprice = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1buyprice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->buyprice);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1sellprice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->sellprice = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1sellprice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->sellprice);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1profit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->profit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1profit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->profit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covorders_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->covorders = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covorders_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (int) ((arg1)->covorders);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covbuylots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (__int64)jarg2; 
  if (arg1) (arg1)->covbuylots = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covbuylots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result =  ((arg1)->covbuylots);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covselllots_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (__int64)jarg2; 
  if (arg1) (arg1)->covselllots = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covselllots_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  __int64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result =  ((arg1)->covselllots);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covbuyprice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->covbuyprice = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covbuyprice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->covbuyprice);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covsellprice_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->covsellprice = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covsellprice_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->covsellprice);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covprofit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->covprofit = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolSummary_1covprofit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolSummary **)&jarg1; 
  result = (double) ((arg1)->covprofit);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1SymbolSummary(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SymbolSummary *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (SymbolSummary *)new SymbolSummary();
  *(SymbolSummary **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1SymbolSummary(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SymbolSummary *arg1 = (SymbolSummary *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SymbolSummary **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1currency_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->currency, (const char *)arg2, 4-1);
      arg1->currency[4-1] = 0;
    } else {
      arg1->currency[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1currency_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  result = (char *)(char *) ((arg1)->currency);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1clients_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->clients = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1clients_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  result = (double) ((arg1)->clients);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1coverage_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->coverage = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ExposureValue_1coverage_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ExposureValue **)&jarg1; 
  result = (double) ((arg1)->coverage);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ExposureValue(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ExposureValue *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ExposureValue *)new ExposureValue();
  *(ExposureValue **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ExposureValue(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ExposureValue *arg1 = (ExposureValue *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ExposureValue **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1color_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  COLORREF arg2 ;
  COLORREF *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  argp2 = *(COLORREF **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null COLORREF");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->color = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1color_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  COLORREF result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result =  ((arg1)->color);
  *(COLORREF **)&jresult = new COLORREF((const COLORREF &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1spread_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1spread_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result = (int) ((arg1)->spread);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1spread_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread_balance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1spread_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result = (int) ((arg1)->spread_balance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1stops_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stops_level = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1stops_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result = (int) ((arg1)->stops_level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1exemode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exemode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolPropertiesOld_1exemode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  result = (int) ((arg1)->exemode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1SymbolPropertiesOld(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SymbolPropertiesOld *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (SymbolPropertiesOld *)new SymbolPropertiesOld();
  *(SymbolPropertiesOld **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1SymbolPropertiesOld(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SymbolPropertiesOld *arg1 = (SymbolPropertiesOld *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SymbolPropertiesOld **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1color_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  COLORREF arg2 ;
  COLORREF *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  argp2 = *(COLORREF **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null COLORREF");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->color = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1color_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  COLORREF result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result =  ((arg1)->color);
  *(COLORREF **)&jresult = new COLORREF((const COLORREF &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1spread_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1spread_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int) ((arg1)->spread);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1spread_1balance_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->spread_balance = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1spread_1balance_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int) ((arg1)->spread_balance);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1stops_1level_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->stops_level = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1stops_1level_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int) ((arg1)->stops_level);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1smoothing_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->smoothing = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1smoothing_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int) ((arg1)->smoothing);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1exemode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exemode = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1exemode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int) ((arg1)->exemode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)8; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_SymbolProperties_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(SymbolProperties **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1SymbolProperties(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  SymbolProperties *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (SymbolProperties *)new SymbolProperties();
  *(SymbolProperties **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1SymbolProperties(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  SymbolProperties *arg1 = (SymbolProperties *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(SymbolProperties **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1symbol_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->symbol, (const char *)arg2, 12-1);
      arg1->symbol[12-1] = 0;
    } else {
      arg1->symbol[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1symbol_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  TickInfo *arg1 = (TickInfo *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  result = (char *)(char *) ((arg1)->symbol);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->ctm = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  TickInfo *arg1 = (TickInfo *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  result = (time_t) ((arg1)->ctm);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1bid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->bid = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1bid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TickInfo *arg1 = (TickInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  result = (double) ((arg1)->bid);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1ask_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->ask = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_TickInfo_1ask_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  TickInfo *arg1 = (TickInfo *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(TickInfo **)&jarg1; 
  result = (double) ((arg1)->ask);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1TickInfo(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  TickInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (TickInfo *)new TickInfo();
  *(TickInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1TickInfo(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  TickInfo *arg1 = (TickInfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(TickInfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (time_t) ((arg1)->time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1sender_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sender = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1sender_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (int) ((arg1)->sender);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1from_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->from, (const char *)arg2, 64-1);
      arg1->from[64-1] = 0;
    } else {
      arg1->from[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1from_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (char *)(char *) ((arg1)->from);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1to_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->to = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1to_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (int) ((arg1)->to);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1subject_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->subject, (const char *)arg2, 128-1);
      arg1->subject[128-1] = 0;
    } else {
      arg1->subject[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1subject_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (char *)(char *) ((arg1)->subject);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1readed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->readed = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1readed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (int) ((arg1)->readed);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1body_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->body;
    if (arg2) {
      arg1->body = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->body, (const char *)arg2);
    } else {
      arg1->body = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1body_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (char *) ((arg1)->body);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1bodylen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bodylen = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1bodylen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (int) ((arg1)->bodylen);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1build_1min_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->build_min = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1build_1min_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (short) ((arg1)->build_min);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1build_1max_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (short)jarg2; 
  if (arg1) (arg1)->build_max = arg2;
}


SWIGEXPORT jshort JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1build_1max_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (short) ((arg1)->build_max);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  MailBox *arg1 = (MailBox *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->reserved = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_MailBox_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  MailBox *arg1 = (MailBox *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MailBox **)&jarg1; 
  result = (int) ((arg1)->reserved);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1MailBox(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MailBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MailBox *)new MailBox();
  *(MailBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1MailBox(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MailBox *arg1 = (MailBox *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MailBox **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  ULONG arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (ULONG)jarg2; 
  if (arg1) (arg1)->key = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  ULONG result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (ULONG) ((arg1)->key);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (time_t)jarg2; 
  if (arg1) (arg1)->time = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (time_t) ((arg1)->time);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1ctm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->ctm, (const char *)arg2, 32-1);
      arg1->ctm[32-1] = 0;
    } else {
      arg1->ctm[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1ctm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (char *)(char *) ((arg1)->ctm);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1topic_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->topic, (const char *)arg2, 256-1);
      arg1->topic[256-1] = 0;
    } else {
      arg1->topic[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1topic_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (char *)(char *) ((arg1)->topic);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->category, (const char *)arg2, 64-1);
      arg1->category[64-1] = 0;
    } else {
      arg1->category[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (char *)(char *) ((arg1)->category);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1keywords_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->keywords, (const char *)arg2, 256-1);
      arg1->keywords[256-1] = 0;
    } else {
      arg1->keywords[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1keywords_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (char *)(char *) ((arg1)->keywords);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1body_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->body;
    if (arg2) {
      arg1->body = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->body, (const char *)arg2);
    } else {
      arg1->body = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1body_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (char *) ((arg1)->body);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1bodylen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->bodylen = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1bodylen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (int) ((arg1)->bodylen);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1readed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->readed = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1readed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (int) ((arg1)->readed);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1priority_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->priority = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1priority_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (int) ((arg1)->priority);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1langid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->langid = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1langid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (int) ((arg1)->langid);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->reserved;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopic_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopic **)&jarg1; 
  result = (int *)(int *) ((arg1)->reserved);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1NewsTopic(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NewsTopic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopic *)new NewsTopic();
  *(NewsTopic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1NewsTopic(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NewsTopic *arg1 = (NewsTopic *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NewsTopic **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1MAX_1NEWS_1BODY_1LEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  NewsTopicNew::constants result;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew::constants)NewsTopicNew::MAX_NEWS_BODY_LEN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1FLAG_1PRIORITY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  NewsTopicNew::EnNewsFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew::EnNewsFlags)NewsTopicNew::FLAG_PRIORITY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1FLAG_1CALENDAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  NewsTopicNew::EnNewsFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew::EnNewsFlags)NewsTopicNew::FLAG_CALENDAR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1FLAG_1MIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  NewsTopicNew::EnNewsFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew::EnNewsFlags)NewsTopicNew::FLAG_MIME;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1FLAG_1ALLOW_1DEMO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  NewsTopicNew::EnNewsFlags result;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew::EnNewsFlags)NewsTopicNew::FLAG_ALLOW_DEMO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1key_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  ULONG arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = (ULONG)jarg2; 
  if (arg1) (arg1)->key = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1key_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  ULONG result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (ULONG) ((arg1)->key);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1language_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->language = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1language_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (UINT) ((arg1)->language);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1subject_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  {
    size_t ii;
    wchar_t *b = (wchar_t *) arg1->subject;
    for (ii = 0; ii < (size_t)256; ii++) b[ii] = *((wchar_t *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1subject_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (wchar_t *)(wchar_t *) ((arg1)->subject);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1category_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  {
    size_t ii;
    wchar_t *b = (wchar_t *) arg1->category;
    for (ii = 0; ii < (size_t)256; ii++) b[ii] = *((wchar_t *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1category_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (wchar_t *)(wchar_t *) ((arg1)->category);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (UINT) ((arg1)->flags);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1body_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  if (arg1) (arg1)->body = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1body_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (wchar_t *) ((arg1)->body);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1body_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = (UINT)jarg2; 
  if (arg1) (arg1)->body_len = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1body_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (UINT) ((arg1)->body_len);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1languages_1list_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = *(UINT **)&jarg2; 
  {
    size_t ii;
    UINT *b = (UINT *) arg1->languages_list;
    for (ii = 0; ii < (size_t)32; ii++) b[ii] = *((UINT *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1languages_1list_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (UINT *)(UINT *) ((arg1)->languages_list);
  *(UINT **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1datetime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  INT64 arg2 ;
  INT64 *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  argp2 = *(INT64 **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null INT64");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->datetime = arg2;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1datetime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  INT64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result =  ((arg1)->datetime);
  *(INT64 **)&jresult = new INT64((const INT64 &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1reserved_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  arg2 = *(UINT **)&jarg2; 
  {
    size_t ii;
    UINT *b = (UINT *) arg1->reserved;
    for (ii = 0; ii < (size_t)30; ii++) b[ii] = *((UINT *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_NewsTopicNew_1reserved_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  UINT *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(NewsTopicNew **)&jarg1; 
  result = (UINT *)(UINT *) ((arg1)->reserved);
  *(UINT **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1NewsTopicNew(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  NewsTopicNew *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (NewsTopicNew *)new NewsTopicNew();
  *(NewsTopicNew **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1NewsTopicNew(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  NewsTopicNew *arg1 = (NewsTopicNew *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(NewsTopicNew **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1code_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ServerLog *arg1 = (ServerLog *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->code = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1code_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ServerLog *arg1 = (ServerLog *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  result = (int) ((arg1)->code);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1time_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->time, (const char *)arg2, 24-1);
      arg1->time[24-1] = 0;
    } else {
      arg1->time[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1time_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  result = (char *)(char *) ((arg1)->time);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1ip_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->ip, (const char *)arg2, 256-1);
      arg1->ip[256-1] = 0;
    } else {
      arg1->ip[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1ip_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  result = (char *)(char *) ((arg1)->ip);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1message_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->message, (const char *)arg2, 512-1);
      arg1->message[512-1] = 0;
    } else {
      arg1->message[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_ServerLog_1message_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  ServerLog *arg1 = (ServerLog *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ServerLog **)&jarg1; 
  result = (char *)(char *) ((arg1)->message);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1ServerLog(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ServerLog *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ServerLog *)new ServerLog();
  *(ServerLog **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1ServerLog(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ServerLog *arg1 = (ServerLog *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ServerLog **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1STANDARD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_STANDARD;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1LOGINS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_LOGINS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1TRADES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_TRADES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1ERRORS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_ERRORS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1FULL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_FULL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1UPDATER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_UPDATER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1SENDMAIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_SENDMAIL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_LOG_1TYPE_1FAILOVER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  EnLogType result;
  
  (void)jenv;
  (void)jcls;
  result = (EnLogType)LOG_TYPE_FAILOVER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BalanceDiff_1login_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  BalanceDiff *arg1 = (BalanceDiff *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BalanceDiff **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->login = arg2;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BalanceDiff_1login_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  BalanceDiff *arg1 = (BalanceDiff *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BalanceDiff **)&jarg1; 
  result = (int) ((arg1)->login);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BalanceDiff_1diff_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  BalanceDiff *arg1 = (BalanceDiff *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BalanceDiff **)&jarg1; 
  arg2 = (double)jarg2; 
  if (arg1) (arg1)->diff = arg2;
}


SWIGEXPORT jdouble JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_BalanceDiff_1diff_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  BalanceDiff *arg1 = (BalanceDiff *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(BalanceDiff **)&jarg1; 
  result = (double) ((arg1)->diff);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1BalanceDiff(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  BalanceDiff *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (BalanceDiff *)new BalanceDiff();
  *(BalanceDiff **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1BalanceDiff(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  BalanceDiff *arg1 = (BalanceDiff *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(BalanceDiff **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1START_1PUMPING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_START_PUMPING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1SYMBOLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_SYMBOLS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1GROUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_GROUPS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1USERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_USERS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1ONLINE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_ONLINE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1BIDASK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_BIDASK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1NEWS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_NEWS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1NEWS_1BODY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_NEWS_BODY;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1MAIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_MAIL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1TRADES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_TRADES;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1REQUESTS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_REQUESTS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1PLUGINS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_PLUGINS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1ACTIVATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_ACTIVATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1MARGINCALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_MARGINCALL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1STOP_1PUMPING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_STOP_PUMPING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1PING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_PING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PUMP_1UPDATE_1NEWS_1NEW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PUMP_UPDATE_NEWS_NEW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEAL_1START_1DEALING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEAL_START_DEALING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEAL_1REQUEST_1NEW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEAL_REQUEST_NEW;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_DEAL_1STOP_1DEALING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DEAL_STOP_DEALING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1QueryInterface(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPVOID *arg2 = (LPVOID *) 0 ;
  LPVOID *arg3 = (LPVOID *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(LPVOID **)&jarg2; 
  arg3 = *(LPVOID **)&jarg3; 
  result = (int)(arg1)->QueryInterface(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AddRef(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->AddRef();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1Release(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->Release();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MemFree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  (arg1)->MemFree(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ErrorDescription(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jstring jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (LPCSTR)(arg1)->ErrorDescription(arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1WorkingDirectory(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  (arg1)->WorkingDirectory(arg2);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1Connect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->Connect(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1Disconnect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->Disconnect();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1IsConnected(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->IsConnected();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1Login(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)(arg1)->Login(arg2,arg3);
  jresult = (jint)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1LoginSecured(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->LoginSecured(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1KeysSend(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->KeysSend(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1Ping(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->Ping();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PasswordChange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)(arg1)->PasswordChange(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ManagerRights(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConManager *arg2 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConManager **)&jarg2; 
  result = (int)(arg1)->ManagerRights(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvRestart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->SrvRestart();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvChartsSync(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->SrvChartsSync();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvLiveUpdateStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->SrvLiveUpdateStart();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvFeedsRestart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->SrvFeedsRestart();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestCommon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConCommon *arg2 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConCommon **)&jarg2; 
  result = (int)(arg1)->CfgRequestCommon(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConTime *arg2 = (ConTime *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConTime **)&jarg2; 
  result = (int)(arg1)->CfgRequestTime(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestBackup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConBackup *arg2 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConBackup **)&jarg2; 
  result = (int)(arg1)->CfgRequestBackup(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestSymbolGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConSymbolGroup *arg2 = (ConSymbolGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConSymbolGroup **)&jarg2; 
  result = (int)(arg1)->CfgRequestSymbolGroup(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestAccess(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConAccess *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConAccess *)(arg1)->CfgRequestAccess(arg2);
  *(ConAccess **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestDataServer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConDataServer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConDataServer *)(arg1)->CfgRequestDataServer(arg2);
  *(ConDataServer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestHoliday(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConHoliday *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConHoliday *)(arg1)->CfgRequestHoliday(arg2);
  *(ConHoliday **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestSymbol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConSymbol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConSymbol *)(arg1)->CfgRequestSymbol(arg2);
  *(ConSymbol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGroup *)(arg1)->CfgRequestGroup(arg2);
  *(ConGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestManager(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConManager *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConManager *)(arg1)->CfgRequestManager(arg2);
  *(ConManager **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestFeeder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConFeeder *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConFeeder *)(arg1)->CfgRequestFeeder(arg2);
  *(ConFeeder **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestLiveUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConLiveUpdate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConLiveUpdate *)(arg1)->CfgRequestLiveUpdate(arg2);
  *(ConLiveUpdate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestSync(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConSync *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConSync *)(arg1)->CfgRequestSync(arg2);
  *(ConSync **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestPlugin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConPluginParam *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConPluginParam *)(arg1)->CfgRequestPlugin(arg2);
  *(ConPluginParam **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateCommon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConCommon *arg2 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConCommon **)&jarg2; 
  result = (int)(arg1)->CfgUpdateCommon((ConCommon const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateAccess(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConAccess *arg2 = (ConAccess *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConAccess **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgUpdateAccess((ConAccess const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateDataServer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConDataServer *arg2 = (ConDataServer *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConDataServer **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgUpdateDataServer((ConDataServer const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConTime *arg2 = (ConTime *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConTime **)&jarg2; 
  result = (int)(arg1)->CfgUpdateTime((ConTime const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateHoliday(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConHoliday *arg2 = (ConHoliday *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConHoliday **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgUpdateHoliday((ConHoliday const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateSymbol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConSymbol *arg2 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConSymbol **)&jarg2; 
  result = (int)(arg1)->CfgUpdateSymbol((ConSymbol const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateSymbolGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConSymbolGroup *arg2 = (ConSymbolGroup *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConSymbolGroup **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgUpdateSymbolGroup((ConSymbolGroup const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConGroup *arg2 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConGroup **)&jarg2; 
  result = (int)(arg1)->CfgUpdateGroup((ConGroup const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateManager(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConManager *arg2 = (ConManager *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConManager **)&jarg2; 
  result = (int)(arg1)->CfgUpdateManager((ConManager const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateFeeder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConFeeder *arg2 = (ConFeeder *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConFeeder **)&jarg2; 
  result = (int)(arg1)->CfgUpdateFeeder((ConFeeder const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateBackup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConBackup *arg2 = (ConBackup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConBackup **)&jarg2; 
  result = (int)(arg1)->CfgUpdateBackup((ConBackup const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateLiveUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConLiveUpdate *arg2 = (ConLiveUpdate *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConLiveUpdate **)&jarg2; 
  result = (int)(arg1)->CfgUpdateLiveUpdate((ConLiveUpdate const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateSync(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConSync *arg2 = (ConSync *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConSync **)&jarg2; 
  result = (int)(arg1)->CfgUpdateSync((ConSync const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdatePlugin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConPlugin *arg2 = (ConPlugin *) 0 ;
  PluginCfg *arg3 = (PluginCfg *) 0 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConPlugin **)&jarg2; 
  arg3 = *(PluginCfg **)&jarg3; 
  arg4 = (int)jarg4; 
  result = (int)(arg1)->CfgUpdatePlugin((ConPlugin const *)arg2,(PluginCfg const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteAccess(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteAccess(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteDataServer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteDataServer(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteHoliday(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteHoliday(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteSymbol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteSymbol(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteGroup(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteManager(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteManager(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteFeeder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteFeeder(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteLiveUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteLiveUpdate(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteSync(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteSync(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftAccess(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftAccess(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftDataServer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftDataServer(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftHoliday(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftHoliday(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftSymbol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftSymbol(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftGroup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftGroup(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftManager(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftManager(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftFeeder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftFeeder(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftLiveUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftLiveUpdate(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftSync(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftSync(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftPlugin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftPlugin(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvFeeders(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ServerFeed *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ServerFeed *)(arg1)->SrvFeeders(arg2);
  *(ServerFeed **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SrvFeederLog(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jstring jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int *arg3 = (int *) 0 ;
  LPSTR result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (LPSTR)(arg1)->SrvFeederLog(arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartRequestObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ChartInfo *arg2 = (ChartInfo *) 0 ;
  time_t *arg3 = (time_t *) 0 ;
  int *arg4 = (int *) 0 ;
  RateInfoOld *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ChartInfo **)&jarg2; 
  arg3 = *(time_t **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (RateInfoOld *)(arg1)->ChartRequestObsolete((ChartInfo const *)arg2,arg3,arg4);
  *(RateInfoOld **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartAddObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfoOld *arg4 = (RateInfoOld *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfoOld **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartAddObsolete(arg2,arg3,(RateInfoOld const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartUpdateObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfoOld *arg4 = (RateInfoOld *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfoOld **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartUpdateObsolete(arg2,arg3,(RateInfoOld const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartDeleteObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfoOld *arg4 = (RateInfoOld *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfoOld **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartDeleteObsolete(arg2,arg3,(RateInfoOld const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PerformanceRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  time_t arg2 ;
  int *arg3 = (int *) 0 ;
  PerformanceInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (time_t)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (PerformanceInfo *)(arg1)->PerformanceRequest(arg2,arg3);
  *(PerformanceInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupInfoUsers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  BackupInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (BackupInfo *)(arg1)->BackupInfoUsers(arg2,arg3);
  *(BackupInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupInfoOrders(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  BackupInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (BackupInfo *)(arg1)->BackupInfoOrders(arg2,arg3);
  *(BackupInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupRequestUsers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int *arg4 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(int **)&jarg4; 
  result = (UserRecord *)(arg1)->BackupRequestUsers(arg2,arg3,arg4);
  *(UserRecord **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupRequestOrders(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int *arg4 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(int **)&jarg4; 
  result = (TradeRecord *)(arg1)->BackupRequestOrders(arg2,arg3,arg4);
  *(TradeRecord **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupRestoreUsers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  UserRecord *arg2 = (UserRecord *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(UserRecord **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->BackupRestoreUsers((UserRecord const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BackupRestoreOrders(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TradeRecord *arg2 = (TradeRecord *) 0 ;
  int *arg3 = (int *) 0 ;
  TradeRestoreResult *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TradeRecord **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (TradeRestoreResult *)(arg1)->BackupRestoreOrders((TradeRecord const *)arg2,arg3);
  *(TradeRestoreResult **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmUsersRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int *arg3 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (UserRecord *)(arg1)->AdmUsersRequest(arg2,arg3);
  *(UserRecord **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmTradesRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  int *arg4 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (TradeRecord *)(arg1)->AdmTradesRequest(arg2,arg3,arg4);
  *(TradeRecord **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmBalanceCheckObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (int)(arg1)->AdmBalanceCheckObsolete(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmBalanceFix(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->AdmBalanceFix((int const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmTradesDelete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->AdmTradesDelete((int const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmTradeRecordModify(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TradeRecord *arg2 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TradeRecord **)&jarg2; 
  result = (int)(arg1)->AdmTradeRecordModify((TradeRecord const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolsRefresh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->SymbolsRefresh();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolsGetAll(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConSymbol *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConSymbol *)(arg1)->SymbolsGetAll(arg2);
  *(ConSymbol **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  ConSymbol *arg3 = (ConSymbol *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(ConSymbol **)&jarg3; 
  result = (int)(arg1)->SymbolGet(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolInfoGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  SymbolInfo *arg3 = (SymbolInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(SymbolInfo **)&jarg3; 
  result = (int)(arg1)->SymbolInfoGet(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolAdd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->SymbolAdd(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolHide(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->SymbolHide(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolChangeObsolete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  SymbolPropertiesOld *arg2 = (SymbolPropertiesOld *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(SymbolPropertiesOld **)&jarg2; 
  result = (int)(arg1)->SymbolChangeObsolete((SymbolPropertiesOld const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolSendTick(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jdouble jarg3, jdouble jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  double arg3 ;
  double arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (double)jarg3; 
  arg4 = (double)jarg4; 
  result = (int)(arg1)->SymbolSendTick(arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1GroupsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGroup *)(arg1)->GroupsRequest(arg2);
  *(ConGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MailSend(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  MailBox *arg2 = (MailBox *) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(MailBox **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (int)(arg1)->MailSend((MailBox const *)arg2,(int const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsSend(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  NewsTopic *arg2 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(NewsTopic **)&jarg2; 
  result = (int)(arg1)->NewsSend((NewsTopic const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1JournalRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jstring jarg5, jlong jarg6) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  time_t arg3 ;
  time_t arg4 ;
  LPCSTR arg5 = (LPCSTR) 0 ;
  int *arg6 = (int *) 0 ;
  ServerLog *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (time_t)jarg3; 
  arg4 = (time_t)jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (LPCSTR)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  arg6 = *(int **)&jarg6; 
  result = (ServerLog *)(arg1)->JournalRequest(arg2,arg3,arg4,arg5,arg6);
  *(ServerLog **)&jresult = result; 
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (UserRecord *)(arg1)->UsersRequest(arg2);
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserRecordsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (UserRecord *)(arg1)->UserRecordsRequest((int const *)arg2,arg3);
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserRecordNew(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  UserRecord *arg2 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(UserRecord **)&jarg2; 
  result = (int)(arg1)->UserRecordNew(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserRecordUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  UserRecord *arg2 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(UserRecord **)&jarg2; 
  result = (int)(arg1)->UserRecordUpdate((UserRecord const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersGroupOp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  GroupCommandInfo *arg2 = (GroupCommandInfo *) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(GroupCommandInfo **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (int)(arg1)->UsersGroupOp((GroupCommandInfo const *)arg2,(int const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserPasswordCheck(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)(arg1)->UserPasswordCheck(arg2,arg3);
  jresult = (jint)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserPasswordSet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)(arg1)->UserPasswordSet(arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1OnlineRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  OnlineRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (OnlineRecord *)(arg1)->OnlineRequest(arg2);
  *(OnlineRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeTransaction(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TradeTransInfo *arg2 = (TradeTransInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TradeTransInfo **)&jarg2; 
  result = (int)(arg1)->TradeTransaction(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (TradeRecord *)(arg1)->TradesRequest(arg2);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeRecordsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (TradeRecord *)(arg1)->TradeRecordsRequest((int const *)arg2,arg3);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesUserHistory(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  time_t arg3 ;
  time_t arg4 ;
  int *arg5 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (time_t)jarg3; 
  arg4 = (time_t)jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (TradeRecord *)(arg1)->TradesUserHistory(arg2,arg3,arg4,arg5);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeCheckStops(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TradeTransInfo *arg2 = (TradeTransInfo *) 0 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TradeTransInfo **)&jarg2; 
  arg3 = (double)jarg3; 
  result = (int)(arg1)->TradeCheckStops((TradeTransInfo const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ReportsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ReportGroupRequest *arg2 = (ReportGroupRequest *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ReportGroupRequest **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (TradeRecord *)(arg1)->ReportsRequest((ReportGroupRequest const *)arg2,(int const *)arg3,arg4);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DailyReportsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  DailyGroupRequest *arg2 = (DailyGroupRequest *) 0 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  DailyReport *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(DailyGroupRequest **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (DailyReport *)(arg1)->DailyReportsRequest((DailyGroupRequest const *)arg2,(int const *)arg3,arg4);
  *(DailyReport **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ExternalCommand(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  LPSTR *arg4 = (LPSTR *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(LPSTR **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ExternalCommand(arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PluginUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConPluginParam *arg2 = (ConPluginParam *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConPluginParam **)&jarg2; 
  result = (int)(arg1)->PluginUpdate((ConPluginParam const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PumpingSwitch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  MTAPI_NOTIFY_FUNC arg2 = (MTAPI_NOTIFY_FUNC) 0 ;
  HWND arg3 ;
  UINT arg4 ;
  int arg5 ;
  HWND const *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(MTAPI_NOTIFY_FUNC *)&jarg2; 
  argp3 = *(HWND **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null HWND const");
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (UINT)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)(arg1)->PumpingSwitch(arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1GroupsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGroup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGroup *)(arg1)->GroupsGet(arg2);
  *(ConGroup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1GroupRecordGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  ConGroup *arg3 = (ConGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(ConGroup **)&jarg3; 
  result = (int)(arg1)->GroupRecordGet(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolInfoUpdated(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  SymbolInfo *arg2 = (SymbolInfo *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(SymbolInfo **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->SymbolInfoUpdated(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (UserRecord *)(arg1)->UsersGet(arg2);
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UserRecordGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  UserRecord *arg3 = (UserRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(UserRecord **)&jarg3; 
  result = (int)(arg1)->UserRecordGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1OnlineGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  OnlineRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (OnlineRecord *)(arg1)->OnlineGet(arg2);
  *(OnlineRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1OnlineRecordGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  OnlineRecord *arg3 = (OnlineRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(OnlineRecord **)&jarg3; 
  result = (int)(arg1)->OnlineRecordGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (TradeRecord *)(arg1)->TradesGet(arg2);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesGetBySymbol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int *arg3 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (TradeRecord *)(arg1)->TradesGetBySymbol(arg2,arg3);
  *(TradeRecord **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesGetByLogin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  int *arg4 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(int **)&jarg4; 
  result = (TradeRecord *)(arg1)->TradesGetByLogin(arg2,arg3,arg4);
  *(TradeRecord **)&jresult = result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesGetByMarket(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (TradeRecord *)(arg1)->TradesGetByMarket(arg2);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeRecordGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  TradeRecord *arg3 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(TradeRecord **)&jarg3; 
  result = (int)(arg1)->TradeRecordGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeClearRollback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->TradeClearRollback(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MarginsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  MarginLevel *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (MarginLevel *)(arg1)->MarginsGet(arg2);
  *(MarginLevel **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MarginLevelGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  MarginLevel *arg4 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = *(MarginLevel **)&jarg4; 
  result = (int)(arg1)->MarginLevelGet(arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1RequestsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  RequestInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (RequestInfo *)(arg1)->RequestsGet(arg2);
  *(RequestInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1RequestInfoGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  RequestInfo *arg3 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(RequestInfo **)&jarg3; 
  result = (int)(arg1)->RequestInfoGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PluginsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConPlugin *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConPlugin *)(arg1)->PluginsGet(arg2);
  *(ConPlugin **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PluginParamGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  ConPluginParam *arg3 = (ConPluginParam *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(ConPluginParam **)&jarg3; 
  result = (int)(arg1)->PluginParamGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MailLast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPSTR arg2 = (LPSTR) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (int)(arg1)->MailLast(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  NewsTopic *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (NewsTopic *)(arg1)->NewsGet(arg2);
  *(NewsTopic **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsTotal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->NewsTotal();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsTopicGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  NewsTopic *arg3 = (NewsTopic *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(NewsTopic **)&jarg3; 
  result = (int)(arg1)->NewsTopicGet(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsBodyRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->NewsBodyRequest(arg2);
}


SWIGEXPORT jstring JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NewsBodyGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jstring jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPSTR result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (LPSTR)(arg1)->NewsBodyGet(arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DealerSwitch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  MTAPI_NOTIFY_FUNC arg2 = (MTAPI_NOTIFY_FUNC) 0 ;
  HWND arg3 ;
  UINT arg4 ;
  HWND const *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(MTAPI_NOTIFY_FUNC *)&jarg2; 
  argp3 = *(HWND **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null HWND const");
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (UINT)jarg4; 
  result = (int)(arg1)->DealerSwitch(arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DealerRequestGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  RequestInfo *arg2 = (RequestInfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(RequestInfo **)&jarg2; 
  result = (int)(arg1)->DealerRequestGet(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DealerSend(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  RequestInfo *arg2 = (RequestInfo *) 0 ;
  int arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(RequestInfo **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)(arg1)->DealerSend((RequestInfo const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DealerReject(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->DealerReject(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DealerReset(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->DealerReset(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TickInfoLast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int *arg3 = (int *) 0 ;
  TickInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (TickInfo *)(arg1)->TickInfoLast(arg2,arg3);
  *(TickInfo **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolsGroupsGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConSymbolGroup *arg2 = (ConSymbolGroup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConSymbolGroup **)&jarg2; 
  result = (int)(arg1)->SymbolsGroupsGet(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ServerTime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (time_t)(arg1)->ServerTime();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MailsRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  MailBox *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (MailBox *)(arg1)->MailsRequest(arg2);
  *(MailBox **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SummaryGetAll(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  SymbolSummary *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (SymbolSummary *)(arg1)->SummaryGetAll(arg2);
  *(SymbolSummary **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SummaryGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  SymbolSummary *arg3 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(SymbolSummary **)&jarg3; 
  result = (int)(arg1)->SummaryGet(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SummaryGetByCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  SymbolSummary *arg3 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(SymbolSummary **)&jarg3; 
  result = (int)(arg1)->SummaryGetByCount(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SummaryGetByType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  SymbolSummary *arg3 = (SymbolSummary *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(SymbolSummary **)&jarg3; 
  result = (int)(arg1)->SummaryGetByType(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SummaryCurrency(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPSTR arg2 = (LPSTR) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)(arg1)->SummaryCurrency(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ExposureGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ExposureValue *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ExposureValue *)(arg1)->ExposureGet(arg2);
  *(ExposureValue **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ExposureValueGet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  ExposureValue *arg3 = (ExposureValue *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(ExposureValue **)&jarg3; 
  result = (int)(arg1)->ExposureValueGet(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1MarginLevelRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  MarginLevel *arg3 = (MarginLevel *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(MarginLevel **)&jarg3; 
  result = (int)(arg1)->MarginLevelRequest(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1HistoryCorrect(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(int **)&jarg3; 
  result = (int)(arg1)->HistoryCorrect(arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ChartInfo *arg2 = (ChartInfo *) 0 ;
  time_t *arg3 = (time_t *) 0 ;
  int *arg4 = (int *) 0 ;
  RateInfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ChartInfo **)&jarg2; 
  arg3 = *(time_t **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (RateInfo *)(arg1)->ChartRequest((ChartInfo const *)arg2,arg3,arg4);
  *(RateInfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartAdd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfo *arg4 = (RateInfo *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfo **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartAdd(arg2,arg3,(RateInfo const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartUpdate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfo *arg4 = (RateInfo *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfo **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartUpdate(arg2,arg3,(RateInfo const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ChartDelete(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int arg3 ;
  RateInfo *arg4 = (RateInfo *) 0 ;
  int *arg5 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = *(RateInfo **)&jarg4; 
  arg5 = *(int **)&jarg5; 
  result = (int)(arg1)->ChartDelete(arg2,arg3,(RateInfo const *)arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TicksRequest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TickRequest *arg2 = (TickRequest *) 0 ;
  int *arg3 = (int *) 0 ;
  TickRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TickRequest **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (TickRecord *)(arg1)->TicksRequest((TickRequest const *)arg2,arg3);
  *(TickRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1PumpingSwitchEx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  MTAPI_NOTIFY_FUNC_EX arg2 = (MTAPI_NOTIFY_FUNC_EX) 0 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(MTAPI_NOTIFY_FUNC_EX *)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(void **)&jarg4; 
  result = (int)(arg1)->PumpingSwitchEx(arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersSyncStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  time_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (time_t)jarg2; 
  result = (int)(arg1)->UsersSyncStart(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersSyncRead(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  UserRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (UserRecord *)(arg1)->UsersSyncRead(arg2);
  *(UserRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1UsersSnapshot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int *)(arg1)->UsersSnapshot(arg2);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesSyncStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  time_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (time_t)jarg2; 
  result = (int)(arg1)->TradesSyncStart(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesSyncRead(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  TradeRecord *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (TradeRecord *)(arg1)->TradesSyncRead(arg2);
  *(TradeRecord **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradesSnapshot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int *)(arg1)->TradesSnapshot(arg2);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DailySyncStart(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  time_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (time_t)jarg2; 
  result = (int)(arg1)->DailySyncStart(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1DailySyncRead(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  DailyReport *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (DailyReport *)(arg1)->DailySyncRead(arg2);
  *(DailyReport **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1TradeCalcProfit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  TradeRecord *arg2 = (TradeRecord *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(TradeRecord **)&jarg2; 
  result = (int)(arg1)->TradeCalcProfit(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1SymbolChange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  SymbolProperties *arg2 = (SymbolProperties *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(SymbolProperties **)&jarg2; 
  result = (int)(arg1)->SymbolChange((SymbolProperties const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BytesSent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->BytesSent();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1BytesReceived(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  result = (int)(arg1)->BytesReceived();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1ManagerCommon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConCommon *arg2 = (ConCommon *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConCommon **)&jarg2; 
  result = (int)(arg1)->ManagerCommon(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1LogsOut(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jstring jarg3, jstring jarg4) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  LPCSTR arg3 = (LPCSTR) 0 ;
  LPCSTR arg4 = (LPCSTR) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (LPCSTR)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return ;
  }
  arg4 = 0;
  if (jarg4) {
    arg4 = (LPCSTR)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return ;
  }
  (arg1)->LogsOut(arg2,arg3,arg4);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1LogsMode(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->LogsMode(arg2);
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1LicenseCheck(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)(arg1)->LicenseCheck(arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestGatewayAccount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGatewayAccount *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGatewayAccount *)(arg1)->CfgRequestGatewayAccount(arg2);
  *(ConGatewayAccount **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestGatewayMarkup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGatewayMarkup *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGatewayMarkup *)(arg1)->CfgRequestGatewayMarkup(arg2);
  *(ConGatewayMarkup **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgRequestGatewayRule(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  ConGatewayRule *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (ConGatewayRule *)(arg1)->CfgRequestGatewayRule(arg2);
  *(ConGatewayRule **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateGatewayAccount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConGatewayAccount *arg2 = (ConGatewayAccount *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConGatewayAccount **)&jarg2; 
  result = (int)(arg1)->CfgUpdateGatewayAccount((ConGatewayAccount const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateGatewayMarkup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConGatewayMarkup *arg2 = (ConGatewayMarkup *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConGatewayMarkup **)&jarg2; 
  result = (int)(arg1)->CfgUpdateGatewayMarkup((ConGatewayMarkup const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgUpdateGatewayRule(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  ConGatewayRule *arg2 = (ConGatewayRule *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(ConGatewayRule **)&jarg2; 
  result = (int)(arg1)->CfgUpdateGatewayRule((ConGatewayRule const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteGatewayAccount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteGatewayAccount(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteGatewayMarkup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteGatewayMarkup(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgDeleteGatewayRule(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)(arg1)->CfgDeleteGatewayRule(arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftGatewayAccount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftGatewayAccount(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftGatewayMarkup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftGatewayMarkup(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1CfgShiftGatewayRule(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->CfgShiftGatewayRule(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1AdmBalanceCheck(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  int *arg3 = (int *) 0 ;
  BalanceDiff *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (BalanceDiff *)(arg1)->AdmBalanceCheck(arg2,arg3);
  *(BalanceDiff **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NotificationsSend_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  LPWSTR arg2 ;
  LPCWSTR arg3 ;
  LPWSTR *argp2 ;
  LPCWSTR *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  argp2 = *(LPWSTR **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null LPWSTR");
    return 0;
  }
  arg2 = *argp2; 
  argp3 = *(LPCWSTR **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null LPCWSTR");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)(arg1)->NotificationsSend(arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerInterface_1NotificationsSend_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int *arg2 = (int *) 0 ;
  UINT arg3 ;
  LPCWSTR arg4 ;
  LPCWSTR *argp4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = (UINT)jarg3; 
  argp4 = *(LPCWSTR **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null LPCWSTR");
    return 0;
  }
  arg4 = *argp4; 
  result = (int)(arg1)->NotificationsSend((int const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1CManagerInterface(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CManagerInterface **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1CManagerFactory_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  LPCSTR arg1 = (LPCSTR) 0 ;
  CManagerFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (LPCSTR)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (CManagerFactory *)new CManagerFactory(arg1);
  *(CManagerFactory **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1CManagerFactory_1_1SWIG_11(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  CManagerFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (CManagerFactory *)new CManagerFactory();
  *(CManagerFactory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1CManagerFactory(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(CManagerFactory **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1Init_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  LPCSTR arg2 = (LPCSTR) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (LPCSTR)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  (arg1)->Init(arg2);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1Init_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  (arg1)->Init();
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1WinsockStartup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  result = (int)((CManagerFactory const *)arg1)->WinsockStartup();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1WinsockCleanup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  ((CManagerFactory const *)arg1)->WinsockCleanup();
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1IsValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  result = (int)((CManagerFactory const *)arg1)->IsValid();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1Version(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  result = (int)((CManagerFactory const *)arg1)->Version();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_CManagerFactory_1Create(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  CManagerFactory *arg1 = (CManagerFactory *) 0 ;
  int arg2 ;
  CManagerInterface *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerFactory **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (CManagerInterface *)((CManagerFactory const *)arg1)->Create(arg2);
  *(CManagerInterface **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_delete_1PumpReceiver(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  PumpReceiver *arg1 = (PumpReceiver *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(PumpReceiver **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PumpReceiver_1OnPump(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  PumpReceiver *arg1 = (PumpReceiver *) 0 ;
  int arg2 ;
  int arg3 ;
  void *arg4 = (void *) 0 ;
  void *arg5 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PumpReceiver **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(void **)&jarg4; 
  arg5 = *(void **)&jarg5; 
  (arg1)->OnPump(arg2,arg3,arg4,arg5);
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_new_1PumpReceiver(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  PumpReceiver *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (PumpReceiver *)new SwigDirector_PumpReceiver(jenv);
  *(PumpReceiver **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PumpReceiver_1director_1connect(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jswig_mem_own, jboolean jweak_global) {
  PumpReceiver *obj = *((PumpReceiver **)&objarg);
  (void)jcls;
  SwigDirector_PumpReceiver *director = static_cast<SwigDirector_PumpReceiver *>(obj);
  director->swig_connect_director(jenv, jself, jenv->GetObjectClass(jself), (jswig_mem_own == JNI_TRUE), (jweak_global == JNI_TRUE));
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_PumpReceiver_1change_1ownership(JNIEnv *jenv, jclass jcls, jobject jself, jlong objarg, jboolean jtake_or_release) {
  PumpReceiver *obj = *((PumpReceiver **)&objarg);
  SwigDirector_PumpReceiver *director = dynamic_cast<SwigDirector_PumpReceiver *>(obj);
  (void)jcls;
  if (director) {
    director->swig_java_change_ownership(jenv, jself, jtake_or_release ? true : false);
  }
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_globalPumper_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  PumpReceiver *arg1 = (PumpReceiver *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(PumpReceiver **)&jarg1; 
  globalPumper = arg1;
}


SWIGEXPORT jlong JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_globalPumper_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  PumpReceiver *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (PumpReceiver *)globalPumper;
  *(PumpReceiver **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_pumpingCallback(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  int arg1 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  void *arg4 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(void **)&jarg3; 
  arg4 = *(void **)&jarg4; 
  pumpingCallback(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_pumpingSwitchEx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  CManagerInterface *arg1 = (CManagerInterface *) 0 ;
  int arg2 ;
  void *arg3 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(CManagerInterface **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(void **)&jarg3; 
  pumpingSwitchEx(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_com_fxcms_mt4_api_mtmanapiJNI_swig_1module_1init(JNIEnv *jenv, jclass jcls) {
  int i;
  
  static struct {
    const char *method;
    const char *signature;
  } methods[1] = {
    {
      "SwigDirector_PumpReceiver_OnPump", "(Lcom/fxcms/mt4/api/PumpReceiver;IIJJ)V" 
    }
  };
  Swig::jclass_mtmanapiJNI = (jclass) jenv->NewGlobalRef(jcls);
  if (!Swig::jclass_mtmanapiJNI) return;
  for (i = 0; i < (int) (sizeof(methods)/sizeof(methods[0])); ++i) {
    Swig::director_method_ids[i] = jenv->GetStaticMethodID(jcls, methods[i].method, methods[i].signature);
    if (!Swig::director_method_ids[i]) return;
  }
}


#ifdef __cplusplus
}
#endif

